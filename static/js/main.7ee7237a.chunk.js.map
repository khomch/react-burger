{"version":3,"sources":["components/feed-order-card/feed-order-card.module.css","components/selected-order/selected-order.module.css","components/app-header/app-header.module.css","pages/profile/profile.module.css","services/actions/ingredients-constants.tsx","services/reducers/ingredients.tsx","services/actions/auth-constants.tsx","services/reducers/auth.tsx","services/actions/ws-constants.tsx","services/reducers/ws.tsx","services/actions/feed-constants.tsx","services/reducers/feed.tsx","services/actions/modals-constants.tsx","services/reducers/modals.tsx","services/reducers/index.tsx","services/middleware/socket-middleware.ts","services/store.tsx","components/app-header/app-header.tsx","utils/hooks.tsx","components/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","utils/check-response.tsx","utils/constants.tsx","utils/cookies.tsx","services/actions/ingredients.tsx","components/draggable-card/draggable-card.tsx","components/burger-constructor/burger-constructor.tsx","components/ingredient-details/ingredient-details.tsx","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/actions/modals.tsx","services/actions/feed.tsx","components/modals/modals.tsx","pages/home-page/home-page.tsx","services/actions/auth.tsx","pages/authorization/login.tsx","pages/authorization/register.tsx","pages/authorization/forgot-password.tsx","components/profile-form/profile-form.tsx","utils/set-order-date-and-time.tsx","components/feed-order-card/feed-order-card.tsx","components/feed-orders/feed-orders.tsx","utils/ws-address.tsx","services/actions/ws.tsx","components/selected-order/selected-order.tsx","pages/profile/profile.tsx","pages/authorization/reset-password.tsx","components/feed-status/feed-status.tsx","pages/feed/feed.tsx","components/protected-route/protected-route.tsx","components/app/app.tsx","reportWebVitals.ts","index.tsx","components/ingredient-details/ingredient-details.module.css","components/feed-status/feed-status.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-constructor/burger-constructor.module.css","components/order-details/order-details.module.css","components/profile-form/profile-form.module.css","components/ingredient/ingredient.module.css","components/modal/modal.module.css","pages/authorization/authorization.module.css","components/draggable-card/draggable-card.module.css","components/app/app.module.css","pages/home-page/home.module.css","components/modal-overlay/modal-overlay.module.css","components/feed-orders/feed-orders.module.css","pages/feed/feed.module.css"],"names":["module","exports","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_INGREDIENT","OPEN_SELECTED_INGREDIENT","SEND_ORDER_REQUEST","SEND_ORDER_SUCCESS","SEND_ORDER_FAILED","CLOSE_ORDER","DELETE_INGREDIENT","UPDATE_SELECTED_INGREDIENTS","initialState","ingredients","ingredientsRequest","ingredientsFailed","selectedBun","selectedIngredients","currentIngredient","modalState","order","orderRequest","orderFailed","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_FAILED","FORGOT_PASSWORD_SUCCESS","RESET_PASSWORD_REQUEST","RESET_PASSWORD_FAILED","RESET_PASSWORD_SUCCESS","REGISTRATION_REQUEST","REGISTRATION_SUCCESS","REGISTRATION_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","forgotPasswordSuccess","forgotPasswordRequest","forgotPasswordFailed","resetPasswordSuccess","resetPasswordRequest","resetPasswordFailed","registrationRequest","registrationSuccess","registrationFailed","loginRequest","loginSuccess","loginFailed","logoutRequest","logoutSuccess","logoutFailed","getUserRequest","getUserSuccess","getUserFailed","updateUserRequest","updateUserSuccess","updateUserFailed","user","WS_CONNECTION_START_FEED","WS_CONNECTION_START_PROFILE","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_DISCONNECT","wsConnected","ordersFeed","error","undefined","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","REMOVE_ORDER","getOrderRequest","getOrderSuccess","getOrderFailed","selectedOrder","OPEN_MODAL","CLOSE_MODAL","rootReducer","combineReducers","ingredientsStore","state","action","type","find","element","_id","currentIngredientId","ingredient","nanoid","filter","ingredientToDelNanoId","update","$splice","dragIndex","hoverIndex","auth","ws","payload","feed","modals","socketMiddleware","wsActions","store","socket","next","dispatch","wsInit","onOpen","onClose","onError","onMessage","disconnect","WebSocket","onopen","event","onerror","onmessage","data","parsedData","JSON","parse","restParsedData","success","onclose","close","wsActionsFeed","wsActionsProfile","createStore","composeWithDevTools","applyMiddleware","thunk","AppHeader","isConstructor","useRouteMatch","path","exact","isFeed","isProfile","className","AppHeaderStyles","header","nav","links","links__item","to","link__text","activeClassName","link__text_active","logo","profile","useSelector","selectorHook","useDispatch","dispatchHook","Ingredient","handleOpenIngredient","location","useLocation","match","handleIngredientCount","ingr","name","i","length","useDrag","item","collect","monitor","opacity","isDragging","dragRef","ref","IngredientsStyles","style","onClick","id","pathname","url","background","image","src","alt","count","size","price","BurgerIngredients","useState","currentTab","setCurrentTab","onTabClick","tab","document","getElementById","scrollIntoView","behavior","BurgerIngredientsStyles","tabs","value","active","ingredientsContainer","onScroll","containerCoords","getBoundingClientRect","currentElementInCat","elementFromPoint","top","currentCategory","closest","ingredientList","h2","map","checkResponse","res","ok","json","Promise","reject","status","baseUrl","setCookie","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","RegExp","replace","decodeURIComponent","deleteCookie","getIngredients","fetch","then","catch","err","sendOrder","headers","Authorization","method","body","stringify","sendOrderRequest","addIngredient","selectedIngredientId","openSelectedIngredient","DraggableCard","index","moveCard","useCallback","updateSelectedIngredients","useRef","useDrop","accept","handlerId","getHandlerId","hover","current","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","drop","drag","preview","DraggableCardStyles","insideIngrediend","icon","inside","e","currentTarget","text","thumbnail","BurgerConstructor","handleTotalClick","total","setTotal","isHover","isOver","dropTarget","handleTotalPrice","pricesSum","reduce","acc","useEffect","BurgerConstructorStyles","constr","constrContainer","outside","isLocked","toppingsWindow","chooseIngredient","totalPrice","IngredientDetails","addSelectedIngredient","ingredientToAdd","useParams","ingredientToShow","IngredientDetailsStyles","ingredientDetails","container","title","image_large","nutritionList","nutrition","calories","proteins","fat","carbohydrates","OrderDetails","OrderDetailsStyles","orderDetails","orderNumber","number","orderId","checkMarkIcon","startCooking","wait","ModalOverlay","ModalOverlayStyles","modalOverlay","modalOverlayHidden","modalRoot","Modal","children","closeModal","handleOverlayClick","handlePressEsc","key","addEventListener","removeEventListener","ReactDOM","ModuleStyles","modal","modalHidden","modalContent","closeIcon","openModal","getOrder","mode","cache","credentials","orders","Modals","history","useHistory","goBack","closeModalWindow","target","HomePage","findIdInUrl","slice","lastIndexOf","styles","h1","burgers","DndProvider","backend","HTML5Backend","choosenBunIdArray","splice","choosenIngredientsIdsArray","ingredientsIdsArray","concat","push","registration","email","password","updateToken","token","setToken","accessToken","indexOf","split","refreshToken","getUser","redirect","referrerPolicy","updateUser","login","logout","forgotPassword","resetPassword","Login","form","setValue","onChange","handleLogin","preventDefault","from","onSubmit","input","placeholder","button","textButton","Register","handleRegistration","ForgotPassword","handleForgotPassword","ProfileForm","initialValue","setInitialValue","compareValues","actions","navButton","navButtonDisabled","disabled","setDateAndTime","orderCreatedAt","separator","orderDateAndTime","orderDate","date","today","getDate","month","getMonth","year","getFullYear","actualDate","orderTime","Number","FeedOrderCard","orderState","setOrderState","orderIngredients","flat","orderPriceWithoutBun","previousValue","currentValue","bunPrice","orderPrice","feedOrderCard","numberAndTime","createdAt","imagesAndPriceContainer","imagesContainer","ingredientId","imageWithBorder","imageWithBorderLastOneConteiner","imageWithBorderLastOne","imageLastOne","ingredientsCount","priceContainer","FeedOrders","setOrders","feedOrdersContainer","wsUrlProfile","wsDisconnect","SelectedOrder","isModal","filteredOrder","setOrder","list","ingredientQty","imageAndName","ingredientName","qtyAndPrice","timeAndTotalPrice","Profile","includes","link","navButtonIsActive","feedOrders","ResetPassword","handleResetPassword","FeedStatus","ordersReady","ordersReadyNumbers","ordersCreated","ordersCreatedNumbers","ordersPending","ordersPendingNumbers","ordersInProgress","uniqueOrdersInProgress","feedStatusConteiner","feedReadyAndInProgress","feedStatus","feedList","feedListItemReady","feedListItemInProgress","feedTotal","feedToday","totalToday","Feed","ProtectedRoute","rest","render","App","AppStyles","app","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.7ee7237a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedOrderCard\":\"feed-order-card_feedOrderCard__2rzCJ\",\"imagesContainer\":\"feed-order-card_imagesContainer__UNi3O\",\"imageWithBorder\":\"feed-order-card_imageWithBorder__3FHKR\",\"imageWithBorderLastOneConteiner\":\"feed-order-card_imageWithBorderLastOneConteiner__xcKOp\",\"imageWithBorderLastOne\":\"feed-order-card_imageWithBorderLastOne__1CSg4\",\"ingredientsCount\":\"feed-order-card_ingredientsCount__3IVQ7\",\"image\":\"feed-order-card_image__2zIff\",\"imageLastOne\":\"feed-order-card_imageLastOne__3LeOa\",\"h2\":\"feed-order-card_h2__3dODa\",\"numberAndTime\":\"feed-order-card_numberAndTime__2TWWl\",\"priceContainer\":\"feed-order-card_priceContainer__2NN9N\",\"imagesAndPriceContainer\":\"feed-order-card_imagesAndPriceContainer__1vemZ\",\"price\":\"feed-order-card_price__1jjLT\",\"icon\":\"feed-order-card_icon__29DOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedOrder\":\"selected-order_selectedOrder__2gJ91\",\"container\":\"selected-order_container__2AMSW\",\"number\":\"selected-order_number__3Xhre\",\"title\":\"selected-order_title__1IcWG\",\"status\":\"selected-order_status__WhGDk\",\"list\":\"selected-order_list__gGD0z\",\"item\":\"selected-order_item__1gJau\",\"imageAndName\":\"selected-order_imageAndName__1V0uq\",\"ingredientName\":\"selected-order_ingredientName__RNs10\",\"imageWithBorder\":\"selected-order_imageWithBorder__6lGxT\",\"image\":\"selected-order_image__1g7Jc\",\"qtyAndPrice\":\"selected-order_qtyAndPrice__3fzZ9\",\"timeAndTotalPrice\":\"selected-order_timeAndTotalPrice__3zSdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"nav\":\"app-header_nav__1_idE\",\"links\":\"app-header_links__2Ojyy\",\"links__item\":\"app-header_links__item__3QU0F\",\"link__text\":\"app-header_link__text__3Xr99\",\"link__text_active\":\"app-header_link__text_active__1xiwS\",\"logo\":\"app-header_logo__zVEfY\",\"profile\":\"app-header_profile__2xjkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2BbXp\",\"nav\":\"profile_nav__1ddV4\",\"link\":\"profile_link__1-1p8\",\"links\":\"profile_links__3QviD\",\"navButton\":\"profile_navButton__4lfvx\",\"navButtonIsActive\":\"profile_navButtonIsActive__2sAfp\",\"h1\":\"profile_h1__3Q-6C\",\"feedOrders\":\"profile_feedOrders__2ruJT\"};","export const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\nexport const OPEN_SELECTED_INGREDIENT: 'OPEN_SELECTED_INGREDIENT' = 'OPEN_SELECTED_INGREDIENT';\nexport const SEND_ORDER_REQUEST: 'SEND_ORDER_REQUEST' = 'SEND_ORDER_REQUEST';\nexport const SEND_ORDER_SUCCESS: 'SEND_ORDER_SUCCESS' = 'SEND_ORDER_SUCCESS';\nexport const SEND_ORDER_FAILED: 'SEND_ORDER_FAILED' = 'SEND_ORDER_FAILED';\nexport const CLOSE_ORDER: 'CLOSE_ORDER' = 'CLOSE_ORDER';\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\nexport const UPDATE_SELECTED_INGREDIENTS: 'UPDATE_SELECTED_INGREDIENTS' = 'UPDATE_SELECTED_INGREDIENTS';","import update from 'immutability-helper';\nimport { TIngredientsState } from './ingredients-types';\nimport {\n    GET_INGREDIENTS_FAILED,\n    GET_INGREDIENTS_REQUEST,\n    GET_INGREDIENTS_SUCCESS,\n    ADD_INGREDIENT,\n    OPEN_SELECTED_INGREDIENT,\n    SEND_ORDER_FAILED,\n    SEND_ORDER_REQUEST,\n    SEND_ORDER_SUCCESS,\n    CLOSE_ORDER,\n    DELETE_INGREDIENT,\n    UPDATE_SELECTED_INGREDIENTS,\n} from \"../actions/ingredients-constants\";\nimport { TIngredientsActions } from '../actions/ingredients-types';\n\n\nconst initialState: TIngredientsState = {\n    ingredients: [],\n    ingredientsRequest: false,\n    ingredientsFailed: false,\n\n    selectedBun: null,\n    selectedIngredients: [],\n\n    currentIngredient: null,\n    modalState: false,\n\n    order: null,\n    orderRequest: false,\n    orderFailed: false,\n};\n\n\nexport const ingredientsReducer = (state: TIngredientsState = initialState, action: TIngredientsActions): TIngredientsState => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST: {\n            return {\n                ...state,\n                ingredientsRequest: true\n            }\n        }\n        case GET_INGREDIENTS_SUCCESS: {\n            return {\n                ...state,\n                ingredientsFailed: false,\n                ingredientsRequest: false,\n                ingredients: action.ingredients,\n            }\n        }\n        case GET_INGREDIENTS_FAILED: {\n            return {\n                ...state,\n                ingredientsFailed: true,\n                ingredientsRequest: false,\n            }\n        }\n\n        case OPEN_SELECTED_INGREDIENT: {\n            return {\n                ...state,\n                currentIngredient: state.ingredients?.find((element: { _id: string }) => (element?._id === action.currentIngredientId)),\n            }\n        }\n        case SEND_ORDER_REQUEST: {\n            return {\n                ...state,\n                orderRequest: true\n            }\n        }\n        case SEND_ORDER_SUCCESS: {\n            return {\n                ...state,\n                orderFailed: false,\n                orderRequest: false,\n                order: action.order,\n                modalState: true,\n            }\n        }\n        case SEND_ORDER_FAILED: {\n            return {\n                ...state,\n                orderFailed: true,\n                orderRequest: false,\n            }\n        }\n        case CLOSE_ORDER: {\n            return {\n                ...state,\n                selectedBun: null,\n                selectedIngredients: [],\n            }\n        }\n\n        case ADD_INGREDIENT: {\n            return action.ingredient.type !== 'bun' ? {\n                ...state,\n                selectedIngredients: [...state.selectedIngredients,\n                {\n                    ...action.ingredient,\n                    nanoid: action.nanoid\n                }]\n            } : {\n                ...state,\n                selectedBun: action.ingredient\n            }\n        }\n\n\n        case DELETE_INGREDIENT: {\n            return {\n                ...state,\n                selectedIngredients: [...state.selectedIngredients].filter((element: { nanoid: string }) => element.nanoid !== action.ingredientToDelNanoId)\n            }\n        }\n\n        case UPDATE_SELECTED_INGREDIENTS: {\n            return {\n                ...state,\n                selectedIngredients: update([...state.selectedIngredients], { $splice: [[action.dragIndex, 1], [action.hoverIndex, 0, [...state.selectedIngredients][action.dragIndex]]] })\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n","export const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\nexport const FORGOT_PASSWORD_FAILED: 'FORGOT_PASSWORD_FAILED' = 'FORGOT_PASSWORD_FAILED';\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\nexport const REGISTRATION_REQUEST: 'REGISTRATION_REQUEST' = 'REGISTRATION_REQUEST';\nexport const REGISTRATION_SUCCESS: 'REGISTRATION_SUCCESS' = 'REGISTRATION_SUCCESS';\nexport const REGISTRATION_FAILED: 'REGISTRATION_FAILED' = 'REGISTRATION_FAILED';\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\nexport const UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST' = 'UPDATE_USER_REQUEST';\nexport const UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS' = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAILED: 'UPDATE_USER_FAILED' = 'UPDATE_USER_FAILED';","import { TAuthState } from \"./auth-types\";\nimport {\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_FAILED,\n    FORGOT_PASSWORD_SUCCESS,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_FAILED,\n    RESET_PASSWORD_SUCCESS,\n    REGISTRATION_REQUEST,\n    REGISTRATION_SUCCESS,\n    REGISTRATION_FAILED,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILED,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILED,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILED,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAILED,\n} from \"../actions/auth-constants\";\nimport { TAuthActions } from \"../actions/auth-types\";\n\nconst initialState: TAuthState = {\n    forgotPasswordSuccess: false,\n    forgotPasswordRequest: false,\n    forgotPasswordFailed: false,\n\n    resetPasswordSuccess: false,\n    resetPasswordRequest: false,\n    resetPasswordFailed: false,\n\n    registrationRequest: false,\n    registrationSuccess: false,\n    registrationFailed: false,\n\n    loginRequest: false,\n    loginSuccess: false,\n    loginFailed: false,\n\n    logoutRequest: false,\n    logoutSuccess: false,\n    logoutFailed: false,\n\n    getUserRequest: false,\n    getUserSuccess: false,\n    getUserFailed: false,\n\n    updateUserRequest: false,\n    updateUserSuccess: false,\n    updateUserFailed: false,\n\n    user: null,\n};\n\n\nexport const authReducer = (state: TAuthState = initialState, action: TAuthActions): TAuthState => {\n\n    switch (action.type) {\n        case FORGOT_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                forgotPasswordRequest: true,\n                forgotPasswordSuccess: false,\n                forgotPasswordFailed: false,\n            }\n        }\n        case FORGOT_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                forgotPasswordSuccess: true,\n                forgotPasswordRequest: false,\n                forgotPasswordFailed: false,\n            }\n        }\n        case FORGOT_PASSWORD_FAILED: {\n            return {\n                ...state,\n                forgotPasswordFailed: true,\n                forgotPasswordSuccess: false,\n                forgotPasswordRequest: false,\n            }\n        }\n        case RESET_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                resetPasswordRequest: true,\n                resetPasswordSuccess: false,\n                resetPasswordFailed: false,\n            }\n        }\n        case RESET_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                resetPasswordSuccess: true,\n                resetPasswordRequest: false,\n                resetPasswordFailed: false,\n            }\n        }\n        case RESET_PASSWORD_FAILED: {\n            return {\n                ...state,\n                resetPasswordFailed: true,\n                resetPasswordSuccess: false,\n                resetPasswordRequest: false,\n            }\n        }\n        case REGISTRATION_REQUEST: {\n            return {\n                ...state,\n                registrationRequest: true,\n                registrationSuccess: false,\n                registrationFailed: false,\n            }\n        }\n        case REGISTRATION_SUCCESS: {\n            return {\n                ...state,\n                registrationRequest: false,\n                registrationSuccess: false,\n                registrationFailed: false,\n                user: action.user\n            }\n        }\n        case REGISTRATION_FAILED: {\n            return {\n                ...state,\n                registrationRequest: false,\n                registrationSuccess: false,\n                registrationFailed: true,\n            }\n        }\n        case LOGIN_REQUEST: {\n            return {\n                ...state,\n                loginRequest: true,\n                loginSuccess: false,\n                loginFailed: false,\n            }\n        }\n        case LOGIN_SUCCESS: {\n            return {\n                ...state,\n                loginRequest: false,\n                loginSuccess: true,\n                loginFailed: false,\n                user: action.user\n            }\n        }\n        case LOGIN_FAILED: {\n            return {\n                ...state,\n                loginRequest: false,\n                loginSuccess: false,\n                loginFailed: true,\n            }\n        }\n        case LOGOUT_REQUEST: {\n            return {\n                ...state,\n                logoutRequest: true,\n                logoutSuccess: false,\n                logoutFailed: false,\n            }\n        }\n        case LOGOUT_SUCCESS: {\n            return {\n                ...state,\n                logoutRequest: false,\n                logoutSuccess: true,\n                logoutFailed: false,\n                user: null\n            }\n        }\n        case LOGOUT_FAILED: {\n            return {\n                ...state,\n                logoutRequest: false,\n                logoutSuccess: false,\n                logoutFailed: true,\n            }\n        }\n        case GET_USER_REQUEST: {\n            return {\n                ...state,\n                getUserRequest: true,\n                getUserSuccess: false,\n                getUserFailed: false,\n            }\n        }\n        case GET_USER_SUCCESS: {\n            return {\n                ...state,\n                getUserRequest: false,\n                getUserSuccess: true,\n                getUserFailed: false,\n                user: action.user\n            }\n        }\n        case GET_USER_FAILED: {\n            return {\n                ...state,\n                getUserRequest: false,\n                getUserSuccess: false,\n                getUserFailed: true,\n            }\n        }\n        case UPDATE_USER_REQUEST: {\n            return {\n                ...state,\n                updateUserRequest: true,\n                updateUserSuccess: false,\n                updateUserFailed: false,\n            }\n        }\n        case UPDATE_USER_SUCCESS: {\n            return {\n                ...state,\n                updateUserRequest: false,\n                updateUserSuccess: true,\n                updateUserFailed: false,\n                user: action.user\n            }\n        }\n        case UPDATE_USER_FAILED: {\n            return {\n                ...state,\n                updateUserRequest: false,\n                updateUserSuccess: false,\n                updateUserFailed: true,\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n","export const WS_CONNECTION_START_FEED: 'WS_CONNECTION_START_FEED' = 'WS_CONNECTION_START_FEED';\nexport const WS_CONNECTION_START_PROFILE: 'WS_CONNECTION_START_PROFILE' = 'WS_CONNECTION_START_PROFILE';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS'; \nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\nexport const WS_DISCONNECT: 'WS_DISCONNECT' = 'WS_DISCONNECT';\n","\nimport { IOrdersFeed } from '../../utils/types';\nimport {\n    WS_CONNECTION_START_FEED,\n    WS_CONNECTION_START_PROFILE,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n\n} from '../actions/ws-constants';\nimport { TWsActions } from '../actions/ws-types';\n\ntype TWSState = {\n    wsConnected: boolean;\n    ordersFeed: IOrdersFeed | null;\n    error?: Event;\n}\n\nconst initialState = {\n    wsConnected: false,\n    ordersFeed: null,\n    error: undefined,\n};\n\n// Создадим редьюсер для WebSocket\nexport const wsReducer = (state: TWSState = initialState, action: TWsActions): TWSState => {\n    switch (action.type) {\n\n        case WS_CONNECTION_START_FEED:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false,\n            };\n\n        case WS_CONNECTION_START_PROFILE:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false,\n            };\n\n        case WS_CONNECTION_SUCCESS:\n            return {\n                ...state,\n                wsConnected: true,\n            };\n\n        case WS_CONNECTION_ERROR:\n            return {\n                ...state,\n                wsConnected: false\n            };\n\n        case WS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false,\n            };\n\n        case WS_GET_MESSAGE:\n            return {\n                ...state,\n                error: undefined,\n                ordersFeed: action.payload\n            };\n        default:\n            return state;\n    }\n};","export const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\nexport const REMOVE_ORDER: 'REMOVE_ORDER' = 'REMOVE_ORDER';\n","\nimport { IOrderFromServer } from '../../utils/types';\nimport {\n    GET_ORDER_REQUEST,\n    GET_ORDER_SUCCESS,\n    GET_ORDER_FAILED,\n    REMOVE_ORDER\n} from '../actions/feed-constants';\nimport { TFeedActions } from '../actions/feed-types';\n\ntype TFeedState = {\n    getOrderRequest: boolean,\n    getOrderSuccess: boolean,\n    getOrderFailed: boolean,\n\n    selectedOrder: Array<IOrderFromServer> | null,\n}\n\nconst initialState = {\n    getOrderRequest: false,\n    getOrderSuccess: false,\n    getOrderFailed: false,\n\n    selectedOrder: null\n};\n\n// Создадим редьюсер для WebSocket\nexport const feedReducer = (state = initialState, action: TFeedActions): TFeedState => {\n    switch (action.type) {\n\n        case GET_ORDER_REQUEST:\n            return {\n                ...state,\n                getOrderRequest: true,\n            };\n\n        case GET_ORDER_SUCCESS:\n            return {\n                ...state,\n                getOrderRequest: false,\n                getOrderSuccess: true,\n                getOrderFailed: false,\n                selectedOrder: action.payload\n            };\n\n        case GET_ORDER_FAILED:\n            return {\n                ...state,\n                getOrderRequest: false,\n                getOrderSuccess: false,\n                getOrderFailed: true,\n            };\n\n        case REMOVE_ORDER:\n            return {\n                ...state,\n                selectedOrder: null\n            };\n\n        default:\n            return state;\n    }\n};","export const OPEN_MODAL: 'OPEN_MODAL' = 'OPEN_MODAL';\nexport const CLOSE_MODAL: 'CLOSE_MODAL' = 'CLOSE_MODAL';","import {\n    OPEN_MODAL,\n    CLOSE_MODAL,\n} from \"../actions/modals-constants\";\nimport { TModalsActions } from '../actions/modals-types';\n\n\nconst initialState: { modalState: boolean } = {\n    modalState: false,\n};\n\n\nexport const modalsReducer = (state: { modalState: boolean } = initialState, action: TModalsActions): { modalState: boolean } => {\n    switch (action.type) {\n\n        case CLOSE_MODAL: {\n            return {\n                ...state,\n                modalState: false,\n            }\n        }\n\n        case OPEN_MODAL: {\n            return {\n                ...state,\n                modalState: true,\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n","import { combineReducers } from 'redux';\nimport { ingredientsReducer } from './ingredients'\nimport { authReducer } from './auth'\nimport { wsReducer } from './ws';\nimport { feedReducer } from './feed';\nimport { modalsReducer } from './modals';\n\nexport const rootReducer = combineReducers({ \n    ingredientsStore: ingredientsReducer,\n    auth: authReducer,\n    ws: wsReducer,\n    feed: feedReducer,\n    modals: modalsReducer\n })","import { Middleware, MiddlewareAPI } from \"redux\";\nimport { AppDispatch, RootState } from \"../store-types\";\n\nexport const socketMiddleware = (wsActions: object): Middleware => {\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\n    let socket: WebSocket | null = null;\n\n    return (next: (arg0: any) => void) => (action: { type: string; payload: string; }) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n      const { wsInit, onOpen, onClose, onError, onMessage, disconnect }: any = wsActions;\n\n      if (type === wsInit) {\n        socket = new WebSocket(`${payload}`);\n      }\n      if (socket) {\n        socket.onopen = (event: Event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event: Event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = (event: { data: string; }) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ type: onMessage, payload: restParsedData });\n        };\n\n        socket.onclose = (event: Event) => {\n          dispatch({ type: onClose, payload: event });\n        };\n      }\n\n      if (type === disconnect) {\n        socket?.close()\n      }\n\n      next(action);\n    };\n  };\n};","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware } from 'redux';\nimport { legacy_createStore as createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport { socketMiddleware } from './middleware/socket-middleware';\n\nimport {\n    WS_CONNECTION_START_FEED,\n    WS_CONNECTION_START_PROFILE,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_ERROR,\n    WS_GET_MESSAGE,\n    WS_DISCONNECT\n} from './actions/ws-constants';\n\nconst wsActionsFeed = {\n    wsInit: WS_CONNECTION_START_FEED,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClose: WS_CONNECTION_CLOSED,\n    onError: WS_CONNECTION_ERROR,\n    onMessage: WS_GET_MESSAGE,\n    disconnect: WS_DISCONNECT\n};\nconst wsActionsProfile = {\n    wsInit: WS_CONNECTION_START_PROFILE,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClose: WS_CONNECTION_CLOSED,\n    onError: WS_CONNECTION_ERROR,\n    onMessage: WS_GET_MESSAGE,\n    disconnect: WS_DISCONNECT\n};\n\n\nconst store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(\n            socketMiddleware(wsActionsFeed),\n            socketMiddleware(wsActionsProfile),\n            thunk\n        )\n    )\n);\n\nexport default store;","import React from 'react';\nimport AppHeaderStyles from './app-header.module.css';\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, NavLink, useRouteMatch } from 'react-router-dom';\n\n\nexport const AppHeader = () => {\n\n  const isConstructor = useRouteMatch({ path: \"/\", exact: true });\n  const isFeed = useRouteMatch(\"/feed\");\n  const isProfile = useRouteMatch(\"/profile\");\n\n  return (\n    <header className={AppHeaderStyles.header}>\n      <nav className={AppHeaderStyles.nav}>\n\n        <ul className={AppHeaderStyles.links}>\n\n          <li className={AppHeaderStyles.links__item}>\n            <BurgerIcon\n              type={isConstructor ? \"primary\" : \"secondary\"} />\n            <NavLink\n              to={'/'} exact={true}\n              className={`${AppHeaderStyles.link__text} text text_type_main-default`}\n              activeClassName={AppHeaderStyles.link__text_active}\n            >\n              Конструктор\n            </NavLink>\n          </li>\n\n          <li className={AppHeaderStyles.links__item}>\n            <ListIcon\n              type={isFeed ? \"primary\" : \"secondary\"} />\n            <NavLink\n              to={'/feed'}\n              className={`${AppHeaderStyles.link__text} text text_type_main-default`}\n              activeClassName={AppHeaderStyles.link__text_active}\n            >\n              Лента заказов\n            </NavLink>\n          </li>\n\n        </ul>\n\n        <div className={AppHeaderStyles.logo}>\n          <Link to={'/'}><Logo /></Link>\n        </div>\n\n        <div className={AppHeaderStyles.profile}>\n          <ProfileIcon\n            type={isProfile ? \"primary\" : \"secondary\"} />\n          <NavLink\n            to={'/profile'}\n            className={`${AppHeaderStyles.link__text} text text_type_main-default`}\n            activeClassName={AppHeaderStyles.link__text_active}\n          >\n            Личный кабинет\n          </NavLink>\n        </div>\n\n      </nav>\n    </header>\n  );\n}\n","import {\n    TypedUseSelectorHook,\n    useDispatch as dispatchHook,\n    useSelector as selectorHook\n} from 'react-redux';\nimport { AppDispatch } from '../services/store-types';\nimport { RootState } from '../services/store-types';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch>(); \n\n","import React, { FC } from 'react';\nimport IngredientsStyles from './ingredient.module.css';\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDrag } from 'react-dnd';\nimport { useSelector } from '../../utils/hooks';\nimport { useRouteMatch, useLocation, Link } from 'react-router-dom';\nimport { TIngredient } from '../../utils/types';\n\ninterface IIngredient {\n    ingredient: TIngredient,\n    handleOpenIngredient: (e: { currentTarget: { id: string; }})  => void\n}\n\nexport const Ingredient: FC<IIngredient> = ({ ingredient, handleOpenIngredient }) => {\n    const location = useLocation();\n    const match = useRouteMatch();\n    const {\n        selectedBun,\n        selectedIngredients\n    } = useSelector(store => store.ingredientsStore)\n\n    const handleIngredientCount = (ingr: TIngredient) => {\n        const countOne = 1;\n        if (ingr.type === 'bun' && ingr.name === selectedBun?.name) {\n            return countOne;\n        } else {\n            return selectedIngredients.filter((i: TIngredient) => i.name === ingr.name).length;\n        }\n    }\n\n    const [{ opacity }, dragRef] = useDrag({\n        type: \"ingredient\",\n        item: ingredient,\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.2 : 1\n        })\n    });\n\n    return (\n\n        <li ref={dragRef} className={IngredientsStyles.ingredient} style={{ opacity }} key={ingredient._id} onClick={handleOpenIngredient} id={ingredient._id}>\n            <Link\n                to={{\n                    pathname: `${match.url}ingredients/${ingredient._id}`,\n                    state: { background: location }\n                }}><img className={IngredientsStyles.image} src={ingredient.image} alt={ingredient.name} /></Link>\n            {handleIngredientCount(ingredient) > 0 && <Counter count={handleIngredientCount(ingredient)} size=\"default\" />}\n            <p className={`${IngredientsStyles.price} text text_type_digits-default`}>{ingredient.price} <CurrencyIcon type=\"primary\" /></p>\n            <p className={`${IngredientsStyles.name} text text_type_main-default`}>{ingredient.name}</p>\n        </li >\n\n    )\n}","import React, { useState, FC } from 'react';\nimport BurgerIngredientsStyles from './burger-ingredients.module.css';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector } from '../../utils/hooks';\nimport { Ingredient } from '../ingredient/ingredient';\nimport { TIngredient } from '../../utils/types';\n\n\ninterface IBurgerIngredients {\n  handleOpenIngredient: (e: { currentTarget: { id: string; }}) => void\n}\n\nexport const BurgerIngredients: FC<IBurgerIngredients> = ({ handleOpenIngredient }) => {\n  // стейт для переключения табов\n  const [currentTab, setCurrentTab] = useState<string>('buns');\n  // функция переключения таба\n  const onTabClick = (tab: string) => {\n    setCurrentTab(tab);\n    const element = document.getElementById(tab);\n    if (element) element.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const {\n    ingredients,\n  } = useSelector(store => store.ingredientsStore)\n\n  const visibleCategory = () => {\n    const ingredientsContainer = document.getElementById('container') as HTMLElement;\n    const containerCoords = ingredientsContainer?.getBoundingClientRect() as DOMRect;\n    const currentElementInCat = document?.elementFromPoint(containerCoords?.top, containerCoords?.top);\n    const currentCategory = currentElementInCat?.closest('ul') as HTMLElement;\n    setCurrentTab(currentCategory.id);\n  }\n\n  return (\n    <section className={BurgerIngredientsStyles.ingredients}>\n      <div className={`text text_type_main-default ${BurgerIngredientsStyles.tabs}`}>\n        <Tab value=\"buns\" active={currentTab === \"buns\"} onClick={onTabClick}>\n          Булки\n        </Tab>\n        <Tab value=\"sauces\" active={currentTab === \"sauces\"} onClick={onTabClick}>\n          Соусы\n        </Tab>\n        <Tab value=\"mains\" active={currentTab === \"mains\"} onClick={onTabClick}>\n          Начинки\n        </Tab>\n      </div>\n\n      <div className={BurgerIngredientsStyles.ingredientsContainer} id=\"container\" onScroll={visibleCategory}>\n\n        <ul className={BurgerIngredientsStyles.ingredientList} id=\"buns\">\n          <h2 className={BurgerIngredientsStyles.h2}>Булки</h2>\n          {ingredients?.filter((item: TIngredient) => item.type === 'bun')\n            .map((ingredient: TIngredient) => {\n              return (\n                <Ingredient key={ingredient._id} ingredient={ingredient} handleOpenIngredient={handleOpenIngredient} />\n              )\n            })\n          }\n        </ul>\n\n        <ul className={BurgerIngredientsStyles.ingredientList} id=\"sauces\">\n          <h2 className={BurgerIngredientsStyles.h2} >Соусы</h2>\n          {ingredients?.filter((item: TIngredient) => item.type === 'sauce')\n            .map((ingredient: TIngredient) => {\n              return (\n                <Ingredient key={ingredient._id} ingredient={ingredient} handleOpenIngredient={handleOpenIngredient} />\n              )\n            })\n          }\n        </ul>\n\n        <ul className={BurgerIngredientsStyles.ingredientList} id=\"mains\">\n          <h2 className={BurgerIngredientsStyles.h2} >Начинки</h2>\n          {ingredients?.filter((item: TIngredient) => item.type === 'main')\n            .map((ingredient: TIngredient) => {\n              return (\n                <Ingredient key={ingredient._id} ingredient={ingredient} handleOpenIngredient={handleOpenIngredient} />\n              )\n            })\n          }\n        </ul>\n\n      </div>\n\n    </section>\n  );\n}\n","// проверяем ответ сервера\nexport const checkResponse = (res: Response) => {\n    if (!res.ok) {\n        return Promise.reject(`Error: ${res.status}`);\n    }\n    return res.json();\n}","export const baseUrl = \"https://norma.nomoreparties.space/api/\";","export function setCookie(name: string, value: string, props?: any) {\n    props = {\n        path: '/',\n        ...props\n    };\n    let exp = props.expires;\n    if (typeof exp == 'number' && exp) {\n        const d = new Date();\n        d.setTime(d.getTime() + exp * 1000);\n        exp = props.expires = d;\n    }\n    if (exp && exp.toUTCString) {\n        props.expires = exp.toUTCString();\n    }\n    value = encodeURIComponent(value);\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n        updatedCookie += '; ' + propName;\n        const propValue = props[propName];\n        if (propValue !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n    document.cookie = updatedCookie;\n}\n\nexport function getCookie(name: string) {\n    const matches = document.cookie.match(\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)') //eslint-disable-line\n    );\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function deleteCookie(name: string) {\n    setCookie(name, \"\", {\n        'max-age': -1\n    })\n}","import { nanoid } from 'nanoid';\nimport { checkResponse } from '../../utils/check-response';\nimport { baseUrl } from '../../utils/constants';\nimport { getCookie } from '../../utils/cookies';\nimport { IGetIngredientsResp, TIngredient } from '../../utils/types';\nimport { AppDispatch } from '../store-types';\nimport {\n    GET_INGREDIENTS_REQUEST,\n    GET_INGREDIENTS_SUCCESS,\n    GET_INGREDIENTS_FAILED,\n    ADD_INGREDIENT,\n    OPEN_SELECTED_INGREDIENT,\n    SEND_ORDER_REQUEST,\n    SEND_ORDER_SUCCESS,\n    SEND_ORDER_FAILED,\n    CLOSE_ORDER,\n    DELETE_INGREDIENT,\n    UPDATE_SELECTED_INGREDIENTS,\n} from './ingredients-constants'\nimport { IAddIngredient, ICloseOrder, IDeleteIngredient, IOpenSelectedIngredient, IUpdateSelectedIngredients } from './ingredients-types';\n\nconst getIngredientsRequest = (): Promise<IGetIngredientsResp> => {\n    return (fetch(`${baseUrl}ingredients/`)\n        .then(checkResponse))\n}\n\n// получаем все ингредиенты\nexport const getIngredients = () => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: GET_INGREDIENTS_REQUEST\n        })\n        getIngredientsRequest()\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: GET_INGREDIENTS_SUCCESS,\n                        ingredients: res.data\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: GET_INGREDIENTS_FAILED,\n                err: err\n            }));\n    }\n}\n\n\n// отправляем заказ на сервер\nconst sendOrderRequest = (data: string[]) => {\n    return (fetch(`${baseUrl}orders/`, {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + getCookie('token')\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n            ingredients: data\n        })\n    })\n        .then(checkResponse))\n}\n\nexport const sendOrder = (data: string[]) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: SEND_ORDER_REQUEST\n        })\n        sendOrderRequest(data)\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: SEND_ORDER_SUCCESS,\n                        order: res\n                    })\n                    dispatch({\n                        type: CLOSE_ORDER,\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: SEND_ORDER_FAILED,\n                err: err\n            }));\n    }\n}\n\n// экшн добавления ингредиента\nexport const addIngredient = (ingredient: TIngredient):IAddIngredient => {\n    return {\n        type: ADD_INGREDIENT,\n        selectedIngredientId: ingredient._id,\n        ingredient: ingredient,\n        nanoid: nanoid()\n    }\n}\n\n// открываем выбранный ингредиент\nexport const openSelectedIngredient = (id: string):IOpenSelectedIngredient => {\n    return  {\n        type: OPEN_SELECTED_INGREDIENT,\n        currentIngredientId: id, \n    } \n}\n\n// отправляем заказ\nexport const closeOrder = ():ICloseOrder => {\n    return {\n        type: CLOSE_ORDER\n    }\n}\n\n\n// удаляем ингредиент из кон    структора\nexport const deleteIngredient = (id: string):IDeleteIngredient => {\n    return {\n        type: DELETE_INGREDIENT,\n        ingredientToDelNanoId: id\n    }\n}\n\n// обновляем список\nexport const updateSelectedIngredients = (dragIndex: number, hoverIndex: number):IUpdateSelectedIngredients => {\n    return {\n        type: UPDATE_SELECTED_INGREDIENTS,\n        dragIndex: dragIndex,\n        hoverIndex: hoverIndex\n    }\n}\n\n","import React, { useCallback, useRef, FC, MouseEvent } from 'react';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport DraggableCardStyles from './draggable-card.module.css';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useDispatch } from '../../utils/hooks';\nimport { updateSelectedIngredients, deleteIngredient } from '../../services/actions/ingredients';\nimport { TConstructorIngredient } from '../../utils/types';\n\n\ninterface IDraggebleCard {\n    ingredient: TConstructorIngredient,\n    index: number\n}\n\nexport const DraggableCard: FC<IDraggebleCard> = ({ ingredient, index }) => {\n\n    const dispatch = useDispatch();\n\n    const handleDeleteIngredient = (e: MouseEvent) => {\n        return dispatch(deleteIngredient(e.currentTarget.id))\n    }\n\n    const moveCard = useCallback((dragIndex: number, hoverIndex: number) => {\n        dispatch(updateSelectedIngredients(dragIndex, hoverIndex))\n    }, [dispatch])\n\n    const ref = useRef<HTMLDivElement>(null)\n\n    const [, drop] = useDrop({\n        accept: \"ingr\",\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item: {index: number}, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item?.index;\n            const hoverIndex: number = index;\n            if (dragIndex === hoverIndex) {\n                return\n            }\n            const hoverBoundingRect = ref.current?.getBoundingClientRect()\n            const hoverMiddleY =\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n            const clientOffset = monitor.getClientOffset() as DOMRect\n            const hoverClientY: number = clientOffset.y - hoverBoundingRect.top\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return\n            }\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return\n            }\n            moveCard(dragIndex, hoverIndex)\n            item.index = hoverIndex\n        }\n    })\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        type: \"ingr\",\n        item: () => {\n            return { ingredient, index }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n    const opacity = isDragging ? 0 : 1\n\n    preview(drop(ref))\n\n    return (\n        <div ref={ref} style={{ opacity }} className={DraggableCardStyles.insideIngrediend} >\n            <div className={DraggableCardStyles.icon} ref={drag}><DragIcon type=\"primary\" /></div>\n            <div className={DraggableCardStyles.inside} onClick={handleDeleteIngredient} id={ingredient.nanoid} key={ingredient.nanoid}>\n                <ConstructorElement\n                    text={ingredient.name}\n                    price={ingredient.price}\n                    thumbnail={ingredient.image}\n                /></div>\n        </div>\n    )\n}\n","import React, { useState, useCallback, useEffect, FC } from 'react';\nimport BurgerConstructorStyles from './burger-constructor.module.css';\nimport { ConstructorElement, Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { useDrop } from 'react-dnd';\nimport { addIngredient } from '../../services/actions/ingredients'\nimport { DraggableCard } from '../draggable-card/draggable-card';\nimport { TConstructorIngredient, TIngredient } from '../../utils/types';\n\n\ninterface IBurgerConstructor {\n  handleTotalClick: () => void\n};\n\nexport const BurgerConstructor: FC<IBurgerConstructor> = ({ handleTotalClick }) => {\n  const { selectedBun, selectedIngredients } = useSelector(store => store.ingredientsStore)\n\n  const [total, setTotal] = useState<number>(0)\n\n  const dispatch = useDispatch();\n\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: \"ingredient\",\n    collect: monitor => ({\n      isHover: monitor.isOver()\n    }),\n    drop(ingredient: TIngredient) {\n      dispatch(addIngredient(ingredient))\n    }\n  });\n\n  const handleTotalPrice = useCallback(() => {\n    if (selectedIngredients || selectedBun) {\n      const ingredientsPrices: number[] = selectedIngredients.map((i: TConstructorIngredient) => i.price)\n      const pricesSum: number = ingredientsPrices.reduce((acc, total) => acc + total, 0)\n      setTotal((!selectedBun?.price ? 0 : selectedBun.price * 2) + pricesSum)\n    }\n  }, [selectedBun, selectedIngredients])\n\n  useEffect(() => {\n    handleTotalPrice()\n  }, [selectedIngredients, selectedBun, handleTotalPrice])\n\n  const className = `${BurgerConstructorStyles.constr} ${isHover ? BurgerConstructorStyles.isHover : \"\"}`\n\n  return (\n    <section className={className} ref={dropTarget}>\n\n      {!selectedBun?.name && !selectedIngredients[0]\n        ?\n        <div className={BurgerConstructorStyles.chooseIngredient}><p className=\"text text_type_main-large\">Выберите ингредиент</p></div>\n        :\n        <div className={BurgerConstructorStyles.constrContainer} >\n\n          <div className={BurgerConstructorStyles.outside}>\n\n            {\n              !selectedBun?.name ? <p className=\"text text_type_main-default text_color_inactive\">Выберите булку</p>\n                :\n                <ConstructorElement\n                  type=\"top\"\n                  isLocked={true}\n                  text={`${selectedBun.name} (верх)`}\n                  price={selectedBun.price}\n                  thumbnail={selectedBun.image}\n                />}\n\n          </div>\n\n\n          <div className={BurgerConstructorStyles.toppingsWindow}>\n\n            {selectedIngredients.map((ingredient: TConstructorIngredient, index: number) => {\n\n              return (\n                <DraggableCard key={ingredient.nanoid} ingredient={ingredient} index={index} />\n              )\n            })}\n\n          </div>\n\n\n          <div className={BurgerConstructorStyles.outside}>\n            {selectedBun?.name && <ConstructorElement\n              type=\"bottom\"\n              isLocked={true}\n              text={`${selectedBun.name} (низ)`}\n              price={selectedBun.price}\n              thumbnail={selectedBun.image}\n            />}\n          </div>\n\n        </div>\n      }\n\n      {total > 0 &&\n        <div className={BurgerConstructorStyles.total}>\n\n          <p className={`text text_type_digits-medium ${BurgerConstructorStyles.totalPrice}`}>\n            {total} <CurrencyIcon type=\"primary\" />\n          </p>\n\n          <Button type=\"primary\" size=\"medium\" onClick={handleTotalClick}>\n            Оформить заказ\n          </Button>\n\n        </div>}\n\n\n    </section>\n\n  );\n}","import React, { useCallback } from 'react';\nimport IngredientDetailsStyles from './ingredient-details.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport {\n    addIngredient,\n} from '../../services/actions/ingredients';\nimport { TIngredient } from '../../utils/types';\n\n\nexport const IngredientDetails = () => {\n    const {\n        ingredients\n    } = useSelector(store => store.ingredientsStore)\n\n    const dispatch = useDispatch();\n    const addSelectedIngredient = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n        const ingredientToAdd: TIngredient | undefined = ingredients.find((element) => element._id === e.currentTarget.id);\n        if (ingredientToAdd !== undefined) {\n            dispatch(addIngredient(ingredientToAdd));\n        }\n    }, [dispatch, ingredients])\n\n    const { id }: { id: string } = useParams();\n\n    const ingredientToShow = ingredients?.find((ingredient: TIngredient) => ingredient._id === id)\n\n    if (ingredientToShow) {\n        return (\n            <div className={IngredientDetailsStyles.ingredientDetails} onClick={addSelectedIngredient} id={ingredientToShow._id}>\n                <div className={IngredientDetailsStyles.container}>\n                    <h2 className={`text text_type_main-large ${IngredientDetailsStyles.title}`}>Детали ингредиента</h2>\n                    <img src={ingredientToShow.image_large}\n                        alt={ingredientToShow.name}\n                        className={IngredientDetailsStyles.image}\n                    ></img>\n\n                    <p className={`text text_type_main-medium ${IngredientDetailsStyles.name}`}>{ingredientToShow.name}</p>\n                    <ul className={IngredientDetailsStyles.nutritionList}>\n                        <li className={`text text_type_main-default text_color_inactive ${IngredientDetailsStyles.nutrition}`} >\n                            <p>Калории, ккал</p>\n                            <p>{ingredientToShow.calories}</p>\n                        </li>\n\n                        <li className={`text text_type_main-default text_color_inactive ${IngredientDetailsStyles.nutrition}`}>\n                            <p>Белки, г</p>\n                            <p>{ingredientToShow.proteins}</p>\n                        </li>\n\n                        <li className={`text text_type_main-default text_color_inactive ${IngredientDetailsStyles.nutrition}`}>\n                            <p>Жиры, г</p>\n                            <p>{ingredientToShow.fat}</p>\n                        </li>\n\n                        <li className={`text text_type_main-default text_color_inactive ${IngredientDetailsStyles.nutrition}`}>\n                            <p>Углеводы, г</p>\n                            <p>{ingredientToShow.carbohydrates}</p>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        )\n    } else {\n        return null\n    }\n\n}","import React from 'react';\nimport OrderDetailsStyles from './order-details.module.css';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector } from '../../utils/hooks';\n\nexport const OrderDetails = () => {\n    // получаем данные из стора\n    const {\n        order\n    } = useSelector(store => store.ingredientsStore)\n\n    return (\n\n        <div className={OrderDetailsStyles.orderDetails}>\n            <div className={OrderDetailsStyles.container}>\n                <h2 className={`text text_type_digits-large ${OrderDetailsStyles.orderNumber}`}>{!order?.order ? \"...\" : order.order.number}</h2>\n                <p className={`text text_type_main-medium ${OrderDetailsStyles.orderId}`}>Идентификатор заказа</p>\n                <div className={`text text_type_main-medium ${OrderDetailsStyles.checkMarkIcon}`}><CheckMarkIcon type=\"primary\" /></div>\n                <p className={`text text_type_main-default ${OrderDetailsStyles.startCooking}`}>Ваш заказ начали готовить</p>\n                <p className={`text text_type_main-default text_color_inactive ${OrderDetailsStyles.wait}`}>Дождитесь готовности на орбитальной станции</p>\n            </div>\n\n        </div>\n\n    )\n};","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalOverlayStyles from './modal-overlay.module.css';\n\ninterface IModalOverlay {\n    modalState: boolean\n}\n\nexport const ModalOverlay: FC<IModalOverlay> = ({ modalState }) => {\n\n    return (\n        <div className={modalState === true ? ModalOverlayStyles.modalOverlay : ModalOverlayStyles.modalOverlayHidden}>\n        </div>\n    );\n}\n\nModalOverlay.propTypes = {\n    modalState: PropTypes.bool.isRequired\n}","import React, { ReactNode, useCallback, useEffect, FC } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport ModuleStyles from './modal.module.css';\nimport { ModalOverlay } from '../modal-overlay/modal-overlay';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\n\nconst modalRoot = document.getElementById('modals') as HTMLElement;\n\ninterface IModal {\n  children: ReactNode,\n  closeModal: () => void,\n  modalState: boolean,\n  handleOverlayClick: (e: React.MouseEvent<HTMLDivElement>) => void\n}\n\nexport const Modal: FC<IModal> = ({ children, closeModal, modalState, handleOverlayClick }) => {\n\n  // закрываем модальное окно по esc\n  const handlePressEsc = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      closeModal();\n    }\n  }, [closeModal]);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handlePressEsc);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handlePressEsc);\n    };\n  }, [handlePressEsc]);\n\n  return ReactDOM.createPortal(\n    children &&\n    <>\n      <div className={modalState === true ? ModuleStyles.modal : ModuleStyles.modalHidden} onClick={handleOverlayClick}>\n        <div className={ModuleStyles.modalContent}>\n          <div className={ModuleStyles.closeIcon} onClick={closeModal}><CloseIcon type=\"primary\" /></div>\n          {children}</div>\n\n      </div>\n      <ModalOverlay modalState={modalState} />\n    </>\n    ,\n    modalRoot\n  );\n}\n","import {\n    CLOSE_MODAL,\n    OPEN_MODAL\n} from './modals-constants'\nimport { ICloseModal, IOpenModal } from './modals-types'\n\n\n// закрываем модалку\nexport const openModal = ():IOpenModal => {\n    return {\n        type: OPEN_MODAL\n    }\n}\n\n\n// закрываем модалку\nexport const closeModal = ():ICloseModal => {\n    return {\n        type: CLOSE_MODAL\n    }\n}","import { baseUrl } from '../../utils/constants';\nimport { checkResponse } from '../../utils/check-response';\nimport { AppDispatch } from '../store-types';\nimport {\n    GET_ORDER_REQUEST,\n    GET_ORDER_SUCCESS,\n    GET_ORDER_FAILED,\n    REMOVE_ORDER,\n} from './feed-constants'\nimport { IGetOrderResp } from '../../utils/types';\n\n\n\nconst getOrderRequest = (orderNumber: string): Promise<IGetOrderResp> => {\n    return (fetch(`${baseUrl}orders/${orderNumber}`, {\n        method: 'GET',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n    })\n        .then(checkResponse))\n}\n\nexport const getOrder = (orderNumber: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: GET_ORDER_REQUEST\n        })\n        getOrderRequest(orderNumber)\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: GET_ORDER_SUCCESS,\n                        payload: res.orders\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: GET_ORDER_FAILED,\n                err: err\n            }));\n    }\n}\n\nexport const removeOrder = () => {\n    return {\n        type: REMOVE_ORDER\n    }\n}","import React, { ReactNode, useCallback, FC } from 'react';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { useHistory } from 'react-router-dom'\nimport { Modal } from '../modal/modal';\nimport {\n    closeModal\n} from '../../services/actions/modals';\nimport { removeOrder } from '../../services/actions/feed';\n\ninterface IModals {\n    children: ReactNode\n}\n\nexport const Modals: FC<IModals> = ({ children }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const close = useCallback(\n        () => {\n            history.goBack()\n        },\n        [history]\n    );\n\n    // хэндлер закрытия окна\n    const closeModalWindow = () => {\n        close()\n        dispatch(closeModal());\n        dispatch(removeOrder())\n    }\n\n    // хэндлер закрытия по клику на оверлэй\n    const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) =>{\n        if (e.target === e.currentTarget) {\n            closeModalWindow();\n        }\n    }\n\n    // получаем данные из стора о состоянии модального окна\n    const {\n        modalState,\n    } = useSelector(store => store.modals)\n\n\n    return (\n\n        <Modal\n            closeModal={closeModalWindow}\n            modalState={modalState}\n            handleOverlayClick={handleOverlayClick}\n        >\n            {children}\n        </Modal>\n\n    );\n}","import React, { useEffect } from 'react';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport styles from './home.module.css';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { BurgerIngredients } from '../../components/burger-ingredients/burger-ingredients';\nimport { BurgerConstructor } from '../../components/burger-constructor/burger-constructor';\nimport { IngredientDetails } from '../../components/ingredient-details/ingredient-details';\nimport { OrderDetails } from '../../components/order-details/order-details';\nimport { Modals } from '../../components/modals/modals'\nimport { Switch, Route, useHistory, useRouteMatch, useLocation } from 'react-router-dom';\nimport {\n    openSelectedIngredient, sendOrder,\n} from '../../services/actions/ingredients';\nimport { TIngredient } from '../../utils/types';\nimport { openModal } from '../../services/actions/modals';\n\nexport const HomePage = () => {\n    const match = useRouteMatch();\n    const history = useHistory();\n    const location: { state: { background: string }, pathname: string } = useLocation();\n    const dispatch = useDispatch();\n\n    const background = location.state && location.state.background;\n\n    // получаем данные из стора\n    const {\n        ingredients,\n        selectedIngredients,\n        selectedBun,\n        currentIngredient,\n        order\n    } = useSelector(store => store.ingredientsStore)\n\n    const {\n        user\n    } = useSelector(store => store.auth)\n\n    const findIdInUrl = history.location.pathname.slice(history.location.pathname.lastIndexOf('/') + 1);\n\n    useEffect(() => {\n        if (ingredients.find((ingredient: TIngredient) => ingredient._id === findIdInUrl)) {\n\n            dispatch(openSelectedIngredient(findIdInUrl));\n            dispatch(openModal());\n        }\n    }, [ingredients, dispatch, findIdInUrl])\n    \n    // хэндлер открытия ингредиента\n    const handleOpenIngredient = (e: { currentTarget: { id: string; }; }) => {\n        dispatch(openSelectedIngredient(e.currentTarget.id));\n        dispatch(openModal());\n    }\n\n    // хэндлер открытия тотала \n    const handleTotalClick = () => {\n        if (!user) {\n            history.push('/login')\n        } else {\n            const choosenBunIdArray: string[] = [];\n            selectedBun && choosenBunIdArray.splice(0, 1, selectedBun._id);\n            const choosenIngredientsIdsArray = selectedIngredients.map((i: TIngredient) => i._id);\n            const ingredientsIdsArray = choosenBunIdArray.concat(choosenIngredientsIdsArray);\n            dispatch(sendOrder(ingredientsIdsArray));\n            dispatch(openModal());\n        }\n    }\n\n    if (!background && location.pathname !== '/') {\n        return (\n            <Route\n                path={`${match.path}ingredients/:id`}\n                children={() => {\n                    return (\n                        <IngredientDetails\n                        />\n                    );\n                }}\n            />\n        )\n    }\n\n    return (\n        <>\n            <h1 className={`text text_type_main-large ${styles.h1}`}>\n                Соберите бургер\n            </h1>\n\n            <section className={styles.burgers}>\n                <DndProvider backend={HTML5Backend}>\n                    {!ingredients[0]\n                        ?\n                        <p className={`text text_type_main-default`}>Загрузка</p>\n                        :\n                        <BurgerIngredients handleOpenIngredient={handleOpenIngredient} />\n                    }\n                    {\n                        <BurgerConstructor handleTotalClick={handleTotalClick} />\n                    }\n                </DndProvider>\n            </section>\n\n            {currentIngredient\n                && background\n                &&\n                <Switch>\n                    <Modals >\n                        <Route\n                            path={`${match.path}ingredients/:id`}\n                            children={() => {\n                                return (\n                                    <IngredientDetails\n                                    />\n                                );\n                            }}\n                        />\n                    </Modals>\n                </Switch>\n            }\n\n            {order\n                &&\n                <Modals>\n                    <OrderDetails />\n                </Modals>\n            }\n\n        </>\n    )\n}\n","import { setCookie, getCookie, deleteCookie } from '../../utils/cookies'\nimport { baseUrl } from '../../utils/constants';\nimport { checkResponse } from '../../utils/check-response';\nimport { ILoginReq, ILoginResp, IRegistrationReq, IRegistrationResp, IUserRequestReq, IUserRequestResp } from '../../utils/types';\nimport { AppDispatch } from '../store-types';\n\nimport {\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_FAILED,\n    FORGOT_PASSWORD_SUCCESS,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_FAILED,\n    RESET_PASSWORD_SUCCESS,\n    REGISTRATION_REQUEST,\n    REGISTRATION_FAILED,\n    REGISTRATION_SUCCESS,\n    LOGIN_FAILED,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAILED,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    GET_USER_FAILED,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    UPDATE_USER_FAILED,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS\n} from './auth-constants';\n\nconst registrationRequest = (data: IRegistrationReq): Promise<IRegistrationResp> => {\n    return (fetch(`${baseUrl}auth/register`, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n            email: data.email,\n            password: data.password,\n            name: data.name\n        })\n    })\n        .then(checkResponse))\n}\n\nexport const registration = (data: IRegistrationReq) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: REGISTRATION_REQUEST\n        })\n        registrationRequest(data)\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: REGISTRATION_SUCCESS,\n                        user: res.user\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: REGISTRATION_FAILED,\n                err: err\n            }));\n    }\n}\n\nconst loginRequest = (data: ILoginReq): Promise<ILoginResp> => {\n    return (fetch(`${baseUrl}auth/login`, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n            email: data.email,\n            password: data.password\n        })\n    })\n        .then(checkResponse))\n}\n\nconst updateToken = async () => {\n    await (\n        fetch(`${baseUrl}auth/token`, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({ token: getCookie('refreshToken') })\n        })\n            .then(checkResponse))\n        .then(res => {\n            setToken(res)\n        })\n}\n\nconst setToken = (res: ILoginResp) => {\n    if (res.success && res.accessToken.indexOf('Bearer') === 0) {\n        setCookie('token', res.accessToken.split('Bearer ')[1], { expires: 1200 });\n        setCookie('refreshToken', res.refreshToken);\n    }\n    if (!getCookie('token') && getCookie('refreshToken')) {\n        updateToken()\n    }\n}\n\nconst checkToken = () => {\n    if (getCookie('token')) {\n        return getCookie('token')\n    } else if (!getCookie('token') && getCookie('refreshToken')) {\n        return updateToken()\n    }\n}\n\nconst getUserRequest = () =>\n    fetch(`${baseUrl}auth/user`, {\n        method: 'GET',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + getCookie('token')\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer'\n    });\n\nexport const getUser = () => {\n    return function (dispatch: AppDispatch) {\n        if (getCookie('token') || getCookie('refreshToken')) {\n            dispatch({\n                type: GET_USER_REQUEST\n            })\n            getUserRequest()\n                .then(data => data.json())\n                .then(res => {\n                    if (res && res.success) {\n                        dispatch({\n                            type: GET_USER_SUCCESS,\n                            user: res.user\n                        })\n                    } else if (!res.success) {\n                        checkToken()\n                    }\n                })\n                .catch(err => dispatch({\n                    type: GET_USER_FAILED,\n                    err: err\n                }));\n        }\n\n    }\n}\n\nconst updateUserRequest = (data: Partial<IUserRequestReq>): Promise<IUserRequestResp> => {\n    return (fetch(`${baseUrl}auth/user`, {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + getCookie('token')\n        },\n        method: \"PATCH\",\n        body: JSON.stringify({\n            email: data.login,\n            name: data.name,\n            password: data.password\n        })\n    })\n        .then(checkResponse))\n}\n\nexport const updateUser = (data: Partial<IUserRequestReq>) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        })\n        updateUserRequest(data)\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: UPDATE_USER_SUCCESS,\n                        user: res.user\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: UPDATE_USER_FAILED,\n                err: err\n            }));\n    }\n}\n\n\nexport const login = (data: ILoginReq) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: LOGIN_REQUEST\n        })\n        loginRequest(data)\n            .then(res => {\n\n                if (res && res.success) {\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        user: res.user\n                    })\n                    setToken(res)\n                }\n            })\n            .catch(err => dispatch({\n                type: LOGIN_FAILED,\n                err: err\n            }));\n    }\n}\n\nconst logoutRequest = () => {\n    return (fetch(`${baseUrl}auth/logout`, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({ token: getCookie('refreshToken') })\n    })\n        .then(checkResponse))\n}\n\nexport const logout = () => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: LOGOUT_REQUEST\n        })\n        logoutRequest()\n            .then(res => {\n\n                if (res && res.success) {\n                    dispatch({\n                        type: LOGOUT_SUCCESS,\n                    })\n                    deleteCookie('token');\n                    deleteCookie('refreshToken');\n                }\n            })\n            .catch(err => dispatch({\n                type: LOGOUT_FAILED,\n                err: err\n            }));\n    }\n}\n\n\nconst forgotPasswordRequest = (data: string) => {\n    return (fetch(`${baseUrl}password-reset/`, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n            email: data\n        })\n    })\n        .then(checkResponse))\n}\n\nexport const forgotPassword = (data: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: FORGOT_PASSWORD_REQUEST\n        })\n        forgotPasswordRequest(data)\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: FORGOT_PASSWORD_SUCCESS,\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: FORGOT_PASSWORD_FAILED,\n                err: err\n            }));\n    }\n}\n\nconst resetPasswordRequest = (data: { password: string, token: string }) => {\n    return (fetch(`${baseUrl}password-reset/reset/`, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n            password: data.password,\n            token: data.token\n        })\n    })\n        .then(checkResponse))\n}\n\nexport const resetPassword = (data: { password: string, token: string }) => {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: RESET_PASSWORD_REQUEST\n        })\n        resetPasswordRequest(data)\n            .then(res => {\n                if (res && res.success) {\n                    dispatch({\n                        type: RESET_PASSWORD_SUCCESS,\n                    })\n                }\n            })\n            .catch(err => dispatch({\n                type: RESET_PASSWORD_FAILED,\n                err: err\n            }));\n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport styles from './authorization.module.css';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport { login, getUser } from '../../services/actions/auth';\n\n\nexport function Login() {\n    const location: { state: { from: string } }  = useLocation();\n    const {\n        user,\n        getUserRequest\n    } = useSelector(store => store.auth)\n\n    const dispatch = useDispatch();\n\n    const [form, setValue] = useState<{email: string, password: string}>({ email: '', password: '' });\n\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\n        setValue({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleLogin = useCallback(\n        e => {\n            e.preventDefault();\n            dispatch(login(form));\n        },\n        [dispatch, form]\n    );\n\n    useEffect(() => {\n        dispatch(getUser())\n    }, [dispatch])\n\n    if (user && location.state) {\n        return (\n            <Redirect\n                to={{\n                    pathname: location.state.from\n                }}\n            />\n        );\n    }\n\n    if (user && !location.state) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/'\n                }}\n            />\n        );\n    }\n\n    if (getUserRequest) {\n        return (\n            <p className={`text text_type_main-default ${styles.container}`}>Загрузка</p>\n        );\n    }\n\n    return (\n\n        <section className={styles.container}>\n\n            <form className={styles.form} onSubmit={handleLogin}>\n                <h1 className={`text text_type_main-medium ${styles.h1}`}>\n                    Вход\n                </h1>\n                <div className={styles.input}>\n                    <Input placeholder=\"Email\" name=\"email\" size={'default'} onChange={onChange} value={form.email} />\n                </div>\n                <div className={styles.input}>\n                    <PasswordInput name=\"password\" onChange={onChange} value={form.password} />\n                </div>\n                <div className={styles.button}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Войти\n                    </Button>\n                </div>\n                <p className=\"text text_type_main-default\">Вы — новый пользователь? <Link to={'/register'} className={styles.textButton}>Зарегистрироваться</Link></p>\n                <p className=\"text text_type_main-default\">Забыли пароль? <Link to={'/forgot-password'} className={styles.textButton}>Восстановить пароль</Link></p>\n\n            </form>\n\n        </section>\n    );\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport styles from './authorization.module.css';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { registration, getUser } from '../../services/actions/auth';\n\nexport const Register = () => {\n\n    const {\n        user,\n        getUserRequest\n    } = useSelector(store => store.auth)\n\n    const dispatch = useDispatch();\n\n    const [form, setValue] = useState<{ email: string, password: string, name: string }>({ email: '', password: '', name: '' });\n\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\n        setValue({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleRegistration = useCallback(\n        e => {\n            e.preventDefault();\n            dispatch(registration(form));\n        },\n        [dispatch, form]\n    );\n\n    useEffect(() => {\n        dispatch(getUser())\n    }, [dispatch])\n\n    if (user) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/'\n                }}\n            />\n        );\n    }\n\n    if (getUserRequest) {\n        return (\n            <p className={`text text_type_main-default ${styles.container}`}>Загрузка</p>\n        );\n    }\n\n\n    return (\n        <section className={styles.container}>\n\n            <form className={styles.form} onSubmit={handleRegistration}>\n                <h1 className={`text text_type_main-medium ${styles.h1}`}>\n                    Регистрация\n                </h1>\n                <div className={styles.input}>\n                    <Input placeholder=\"Имя\" name=\"name\" size={'default'} onChange={onChange} value={form.name} />\n                </div>\n                <div className={styles.input}>\n                    <Input placeholder=\"Email\" name=\"email\" size={'default'} onChange={onChange} value={form.email} />\n                </div>\n                <div className={styles.input}>\n                    <PasswordInput onChange={onChange} name=\"password\" value={form.password} />\n                </div>\n                <div className={styles.button}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Зарегистрироваться\n                    </Button>\n                </div>\n                <p className=\"text text_type_main-default\">Уже зарегистрированы? <Link to={'/login'} className={styles.textButton}>Войти</Link></p>\n\n            </form>\n\n        </section>\n    );\n}","import React, { useCallback, useState } from 'react';\nimport styles from './authorization.module.css';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { forgotPassword } from '../../services/actions/auth';\n\nexport const ForgotPassword = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const {\n        forgotPasswordSuccess\n    } = useSelector(store => store.auth)\n\n    const [form, setValue] = useState({ email: '' });\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleForgotPassword = useCallback(\n        e => {\n            e.preventDefault();\n            dispatch(forgotPassword(form.email));\n        },\n        [dispatch, form]\n    );\n\n    if (forgotPasswordSuccess) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/reset-password', state: { from: history.location.pathname }\n                }}\n            />\n        );\n    }\n\n    return (\n        <section className={styles.container}>\n\n            <form className={styles.form} onSubmit={handleForgotPassword}>\n                <h1 className={`text text_type_main-medium ${styles.h1}`}>\n                    Восстановление пароля\n                </h1>\n                <div className={styles.input}>\n                    <Input type={'email'} placeholder=\"Укажите Email\" name=\"email\" size={'default'} onChange={onChange} value={form.email} />\n                </div>\n                <div className={styles.button}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Восстановить\n                    </Button>\n                </div>\n                <p className=\"text text_type_main-default\">Вспомнили пароль? <Link to={'/login'} className={styles.textButton}>Войти</Link></p>\n\n            </form>\n\n        </section>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport styles from './profile-form.module.css';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { updateUser } from '../../services/actions/auth';\n\nexport const ProfileForm = () => {\n    const dispatch = useDispatch();\n    const {\n        user\n    } = useSelector(store => store.auth)\n\n    const [form, setValue] = useState<{name: string, login: string, password?: string}>({ name: '', login: '', password: '' });\n    const [initialValue, setInitialValue] = useState<{name: string, login: string, password?: string}>({ name: '', login: '', password: '' });\n\n    useEffect(() => {\n        if (user) {\n            setValue({ name: user.name, login: user.email })\n            setInitialValue({ name: user.name, login: user.email })\n        }\n    }, [user?.name, user?.email, user])\n\n\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\n        setValue({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const onSaveClick = (e: { preventDefault: () => void; }) => {\n        e.preventDefault()\n        setInitialValue(form)\n        dispatch(updateUser(form))\n\n    }\n\n    const onCancelClick = (e: { preventDefault: () => void; }) => {\n        e.preventDefault()\n        setValue(initialValue);\n    }\n\n    const compareValues = form.name === initialValue.name && form.login === initialValue.login && form.password === initialValue.password;\n\n    return (\n                <form className={styles.form}>\n                    <div className={styles.input}>\n                        <Input placeholder=\"Имя\" name=\"name\" size={'default'} icon={'EditIcon'} value={form.name || \"\"} onChange={onChange} />\n                    </div>\n                    <div className={styles.input}>\n                        <Input placeholder=\"Логин\" name=\"login\" size={'default'} icon={'EditIcon'} value={form.login || \"\"} onChange={onChange} />\n                    </div>\n                    <div className={styles.input}>\n                        <Input placeholder=\"Пароль\" name=\"password\" type={'password'} size={'default'} icon={'EditIcon'} value={form.password || \"\"} onChange={onChange} />\n                    </div>\n                    <div className={styles.actions}>\n                        <button onClick={onCancelClick} className={`text text_type_main-default ${styles.navButton} ${compareValues ? styles.navButtonDisabled : \"\"}`}>Отменить</button>\n                        <Button onClick={onSaveClick} disabled={compareValues ? true : false}>Сохранить</Button>\n                    </div>\n                </form>\n\n    );\n}","export const setDateAndTime = (orderCreatedAt: string) => {\n\n    function splitString(stringToSplit: string, separator: string) {\n        return stringToSplit.split(separator)\n     }\n\n    const orderDateAndTime = splitString(orderCreatedAt, 'T')\n    const orderDate = orderDateAndTime[0].replace(/-/gi, '/')\n    const date = new Date()\n    const today = date.getDate()\n    const month = date.getMonth() + 1\n    const year = date.getFullYear()\n    const actualDate = `${year}/${month > 9 ? month : `0${month}`}/${today > 9 ? today : `0${today}`}`\n\n    \n\n    const orderTime = orderDateAndTime[1].split('.')[0].slice(0, -3)\n    \n    if (Number(actualDate.slice(-2)) - Number(orderDate.slice(-2)) === 0 && Number(actualDate.slice(-5, -3)) - Number(orderDate.slice(-5, -3)) === 0) {\n        return `Сегодня, ${orderTime} i-UTM`\n    }\n\n    if (Number(actualDate.slice(-2)) - Number(orderDate.slice(-2)) === 1 && Number(actualDate.slice(-5, -3)) - Number(orderDate.slice(-5, -3)) === 0) {\n        return `Вчера, ${orderTime} i-UTM`\n    }\n\n    if (1 < Number(actualDate.slice(-2)) - Number(orderDate.slice(-2)) &&  Number(actualDate.slice(-2)) - Number(orderDate.slice(-2)) < 4 && Number(actualDate.slice(-5, -3)) - Number(orderDate.slice(-5, -3)) === 0) {\n        return `${Number(actualDate.slice(-2)) - Number(orderDate.slice(-2))} дня назад, ${orderTime} i-UTM`\n    }\n\n    if (4 < Number(actualDate.slice(-2)) - Number(orderDate.slice(-2)) &&  Number(actualDate.slice(-2)) - Number(orderDate.slice(-2)) < 30 && Number(actualDate.slice(-5, -3)) - Number(orderDate.slice(-5, -3)) === 0) {\n        return `${Number(actualDate.slice(-2)) - Number(orderDate.slice(-2))} дней назад, ${orderTime} i-UTM`\n    }\n\n    if (0 < Number(actualDate.slice(-5, -3)) - Number(orderDate.slice(-5, -3))) {\n        return `Больше месяца назад`\n    }\n}","import styles from './feed-order-card.module.css';\nimport { useSelector } from '../../utils/hooks';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { setDateAndTime } from '../../utils/set-order-date-and-time';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\nimport { IOrderFromServer, TIngredient } from '../../utils/types';\nimport { FC, useEffect, useState } from 'react';\n\ninterface IFeedOrderCard {\n    order: IOrderFromServer,\n    index: number\n}\n\nexport const FeedOrderCard: FC<IFeedOrderCard> = ({ order, index }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const match = useRouteMatch();\n\n    const [orderState, setOrderState] = useState<IOrderFromServer | null>(null)\n    useEffect(() => {\n        setOrderState(order)\n\n        return () => {\n            setOrderState(null)\n        }\n    }, [order])\n\n    const {\n        ingredients,\n    } = useSelector(store => store.ingredientsStore)\n\n    const orderIngredients: TIngredient[] = order.ingredients.map((i: string) => ingredients.filter((ingredient: TIngredient) => ingredient._id === i)).flat()\n    const orderPriceWithoutBun = orderIngredients.filter((ingr: TIngredient) => ingr.type !== 'bun').map((i: TIngredient) => i.price).reduce(function (previousValue: number, currentValue: number) {\n        return previousValue + currentValue;\n    }, 0)\n    const bunPrice = orderIngredients.find((ingr: TIngredient) => ingr.type === 'bun') ? orderIngredients?.find((ingr: TIngredient) => ingr.type === 'bun')?.price : 0;\n    const orderPrice = bunPrice && orderPriceWithoutBun + (bunPrice * 2)\n\n    const handleFeedOrderCardClick = (e: { currentTarget: { id: string; } }) => {\n        const orderNumber: string = e.currentTarget.id\n        history.push({\n            pathname: `${match.url.slice(-1) === '/' ? match.url : `${match.url}/`}${orderNumber}`,\n            state: { background: location }\n        })\n    }\n\n    if (orderState === null) {\n        return (\n\n            <h2 className={styles.h2}>Загрузка...</h2>\n        )\n    }\n    return (\n        orderState &&\n        <div className={styles.feedOrderCard} key={index} id={orderState.number} onClick={handleFeedOrderCardClick}>\n            <div className={styles.numberAndTime}>\n                <span className={'text text_type_digits-default'}>{`#${orderState.number}`}</span>\n                <span className={'text text_type_main-default text_color_inactive'}>{setDateAndTime(order.createdAt)}</span>\n            </div>\n            <h2 className={styles.h2}>{orderState.name}</h2>\n            <div className={styles.imagesAndPriceContainer}>\n                <ul className={styles.imagesContainer} >\n                    {orderState.ingredients.slice(0, 5).map((ingredientId: string, i: number) => {\n                        return (\n                            <li className={styles.imageWithBorder} key={i}>\n                                <img className={styles.image} src={ingredients.find((ingr) => ingredientId === ingr._id)?.image} alt={ingredients.find((i) => ingredientId === i._id)?.name} />\n                            </li>\n\n                        )\n                    })}\n                    {orderIngredients.flat()[5] && <li className={styles.imageWithBorderLastOneConteiner}>\n                        <div className={`${styles.imageWithBorder} ${styles.imageWithBorderLastOne}`}><img className={`${styles.image} ${styles.imageLastOne}`} src={orderIngredients.flat()[5].image} alt={orderIngredients.flat()[5].name} /></div>\n                        <div className={`text text_type_digits-default ${styles.ingredientsCount}`}>{`+${orderIngredients.flat().slice(5).length}`}</div>\n                    </li>}\n                </ul>\n                <span></span>\n\n                <div className={styles.priceContainer}>\n                    <span className='text text_type_digits-default'>{`${orderPrice} `}</span>\n                    <span className={styles.icon}><CurrencyIcon type={'primary'} /></span>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}","import styles from './feed-orders.module.css';\nimport { FeedOrderCard } from '../feed-order-card/feed-order-card';\nimport { IOrderFromServer, IOrdersFeed } from '../../utils/types';\nimport { useEffect, useState } from 'react';\n\nexport const FeedOrders = ({ ordersFeed }: { ordersFeed: IOrdersFeed | null }) => {\n  const [orders, setOrders] = useState<IOrdersFeed | null>(null)\n  \n  useEffect(() => {\n    setOrders(ordersFeed)\n\n    return () => {\n      setOrders(null)\n    }\n  }, [ordersFeed])\n\n  if (!orders) {\n    return (\n      <section className={styles.feedOrdersContainer}>\n        Загрузка...\n      </section>\n    )\n  }\n\n  if (orders) {\n    return (\n      <section className={styles.feedOrdersContainer}>\n        {orders && orders.orders.map((order: IOrderFromServer, index: number) => {\n          return <FeedOrderCard order={order} key={index} index={index} />\n        })}\n      </section>\n    )\n  }\n  else return <></>\n\n}","import { getCookie } from \"./cookies\";\n\nconst accessToken = getCookie('token')\n\nexport const wsUrlFeed = `wss://norma.nomoreparties.space/orders/all`;\nexport const wsUrlProfile = `wss://norma.nomoreparties.space/orders?token=${accessToken}`;\n\n","import { IOrdersFeed } from \"../../utils/types\";\nimport { wsUrlFeed, wsUrlProfile } from \"../../utils/ws-address\";\nimport {\n    WS_CONNECTION_START_FEED,\n    WS_CONNECTION_START_PROFILE,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n    WS_DISCONNECT\n} from \"./ws-constants\";\nimport { IWsConnectionClosed, IWsConnectionError, IWsConnectionStartFeed, IWsConnectionStartProfile, IWsConnectionSuccess, IWsDisconnect, IWsGetMessage } from \"./ws-types\";\n\nexport const wsConnectionStartFeed = (): IWsConnectionStartFeed => {\n    return {\n        type: WS_CONNECTION_START_FEED,\n        payload: wsUrlFeed\n        \n    };\n};\n\nexport const wsConnectionStartProfile = (): IWsConnectionStartProfile => {\n    return {\n        type: WS_CONNECTION_START_PROFILE,\n        payload: wsUrlProfile\n        \n    };\n};\n\nexport const wsConnectionSuccess = (): IWsConnectionSuccess => {\n    return {\n        type: WS_CONNECTION_SUCCESS\n    };\n};\n\nexport const wsConnectionError = (): IWsConnectionError => {\n    return {\n        type: WS_CONNECTION_ERROR\n    };\n};\n\nexport const wsConnectionClosed = (): IWsConnectionClosed => {\n    return {\n        type: WS_CONNECTION_CLOSED\n    };\n};\n\nexport const wsDisconnect = (): IWsDisconnect => {\n    return {\n        type: WS_DISCONNECT\n    };\n};\n\nexport const wsGetMessage = (message: IOrdersFeed): IWsGetMessage => {\n    return {\n        type: WS_GET_MESSAGE,\n        payload: message\n    };\n};","import React, { useEffect, useState } from 'react';\nimport styles from './selected-order.module.css';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { IOrderFromServer, TIngredient } from '../../utils/types';\nimport { openModal } from '../../services/actions/modals';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { setDateAndTime } from '../../utils/set-order-date-and-time';\n\nexport const SelectedOrder = ({ selectedOrder, isModal }: { selectedOrder: IOrderFromServer, isModal: boolean }) => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (isModal) {\n            dispatch(openModal())\n        }\n    }, [isModal, dispatch])\n\n    const {\n        ingredients,\n    } = useSelector(store => store.ingredientsStore)\n\n    const orderIngredients: TIngredient[] = selectedOrder.ingredients.map((i: string) => ingredients.filter((ingredient: TIngredient) => ingredient._id === i)).flat()\n    const orderPriceWithoutBun = orderIngredients.filter((ingr: TIngredient) => ingr.type !== 'bun').map((i: TIngredient) => i.price).reduce(function (previousValue: number, currentValue: number) {\n        return previousValue + currentValue;\n    }, 0)\n    const bunPrice = orderIngredients.find((ingr: TIngredient) => ingr.type === 'bun') ? orderIngredients?.flat().find((ingr: TIngredient) => ingr?.type === 'bun')?.price : 0;\n    const orderPrice = bunPrice && orderPriceWithoutBun + (bunPrice * 2)\n\n\n    const filteredOrder = orderIngredients.filter((item: TIngredient, index: number) => {\n        return orderIngredients.indexOf(item) === index\n    })\n\n    const [order, setOrder] = useState<IOrderFromServer | null>(null)\n\n    useEffect(() => {\n        selectedOrder && setOrder(selectedOrder)\n    }, [selectedOrder])\n\n\n\n    if (order === null) {\n        return (\n            <div className={styles.selectedOrder}>\n                Загрузка...\n            </div>\n        )\n    }\n\n    if (order) {\n        return (\n            <div className={styles.selectedOrder}>\n                <div className={styles.container}>\n                    <p className={`text text_type_digits-default ${styles.number}`}>{`# ${selectedOrder.number}`}</p>\n                    <h2 className={`text text_type_main-medium ${styles.title}`}>{selectedOrder.name}</h2>\n                    <p className={`text text_type_main-small ${styles.status}`}>{selectedOrder.status === 'done' ? 'Выполнен' : \"В работе\"}</p>\n                    <p className={`text text_type_main-medium`}>Состав:</p>\n                    <ul className={styles.list}>\n                        {filteredOrder.map((ingredient: TIngredient, index: number) => {\n                            const ingredientQty = orderIngredients.filter((ingr: TIngredient) => ingr._id === ingredient._id).length\n                            return (<li className={styles.item} key={index}>\n                                <div className={styles.imageAndName}>\n                                    <div className={styles.imageWithBorder}>\n                                        <img className={styles.image} src={ingredient.image} alt={ingredient.name} />\n                                    </div>\n                                    <span className={`text text_type_main-default ${styles.ingredientName}`}>{ingredient.name}</span>\n                                </div>\n                                <div className={styles.qtyAndPrice}>\n                                    <p className={`text text_type_digits-default`}>{ingredient.type === 'bun' ? 2 : ingredientQty}</p>\n                                    <p className={`text text_type_main-default text text_type_digits-default`}>{` x ${ingredient.price} `}</p>\n                                    <span className={styles.icon}><CurrencyIcon type={'primary'} /></span>\n                                </div>\n                            </li>)\n                        })}\n                    </ul>\n                    <div className={styles.timeAndTotalPrice}>\n                        <span className={`text text_type_main-default text_color_inactive`}>{setDateAndTime(selectedOrder.createdAt)}</span>\n                        <span className={`text text_type_digits-medium`}>{`${orderPrice} `}<CurrencyIcon type={'primary'} /></span>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return <></>\n    }\n}","import styles from './profile.module.css';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { Link, Route, Switch, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport { logout } from '../../services/actions/auth';\nimport { ProfileForm } from '../../components/profile-form/profile-form';\nimport { FeedOrders } from '../../components/feed-orders/feed-orders';\nimport { useEffect } from 'react';\nimport { wsConnectionStartProfile, wsDisconnect } from '../../services/actions/ws';\nimport { getOrder } from '../../services/actions/feed';\nimport { Modals } from '../../components/modals/modals';\nimport { SelectedOrder } from '../../components/selected-order/selected-order';\n\nexport const Profile = () => {\n\n    const dispatch = useDispatch();\n    const onClick = () => {\n        dispatch(logout())\n    }\n    const match = useRouteMatch();\n    const history = useHistory();\n    const location: { state: { background: string }, pathname: string } = useLocation();\n    const findIdInUrl = history.location.pathname.slice(history.location.pathname.lastIndexOf('/') + 1);\n    const orderNumber = match.path !== history.location.pathname && history.location.pathname !== '/profile' && findIdInUrl\n    const background = location.state && location.state.background;\n\n    const {\n        ordersFeed,\n    } = useSelector(store => store.ws)\n\n    const {\n        selectedOrder,\n    } = useSelector(store => store.feed)\n\n\n    useEffect(() => {\n        if (location.pathname.includes('profile/orders') && orderNumber) {\n            dispatch(wsConnectionStartProfile());\n            orderNumber && dispatch(getOrder(orderNumber))\n            \n            return () => {\n                dispatch(wsDisconnect())\n           }\n        }\n\n    }, [dispatch, location.pathname, orderNumber])\n\n    if (orderNumber && selectedOrder && !background && location.pathname !== ('/profile/orders' || '/profile/orders/')) {\n        return (\n            <Switch>\n                <Route\n                    path={`${match.path}/:number`}\n                    children={() => {\n                        return (\n                            <SelectedOrder selectedOrder={selectedOrder[0]} isModal={false}\n                            />\n                        );\n                    }}\n                />\n            </Switch>\n        )\n    }\n\n    return (\n        <>\n            <section className={styles.container}>\n                <nav className={styles.nav}>\n                    <ul className={styles.links}>\n                        <li className={`${styles.link} text text_type_main-large ${styles.navButton} ${styles.navButtonIsActive}`}><Link to=\"/profile\" className={`text text_type_main-large ${styles.navButton}`}>Профиль</Link></li>\n                        <li className={styles.link}><Link to=\"/profile/orders\" className={`text text_type_main-large ${styles.navButton}`}>История заказов</Link></li>\n                        <li className={styles.link}><button onClick={onClick} className={`text text_type_main-large ${styles.navButton}`}>Выход</button></li>\n                    </ul>\n                    <p className='text text_type_main-default text_color_inactive'>В этом разделе вы можете изменить свои персональные данные</p>\n                </nav>\n\n                {<Switch>\n                    <Route\n                        path={`${match.path}/`} exact={true}\n                        children={() => {\n                            return (\n                                <ProfileForm />\n                            );\n                        }}\n                    />\n                </Switch>}\n\n                {<Switch>\n                    <Route\n                        path={`${match.path}/orders`}\n                        children={() => {\n                            return (<div className={styles.feedOrders}>\n                                <FeedOrders ordersFeed={ordersFeed} />\n                            </div>\n                            );\n                        }}\n                    />\n                </Switch>}\n\n                {background\n                    && selectedOrder\n                    &&\n                    <Switch>\n                        <Modals >\n                            <Route\n                                path={`${match.path}/:number`}\n                                children={() => {\n                                    return (\n                                        <SelectedOrder selectedOrder={selectedOrder[0]} isModal={true}\n                                        />\n                                    );\n                                }}\n                            />\n                        </Modals>\n                    </Switch>}\n\n            </section>\n        </>\n    );\n}","import React, { useState, useCallback } from 'react';\nimport styles from './authorization.module.css';\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { resetPassword } from '../../services/actions/auth';\n\nexport const ResetPassword = () => {\n\n    const dispatch = useDispatch();\n\n    const {\n        resetPasswordSuccess\n    } = useSelector(store => store.auth)\n\n    const history: { location: { state: { pathname: string, from: string } } } = useHistory();\n\n    const [form, setValue] = useState({ password: '', token: '' });\n\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\n        setValue({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleResetPassword = useCallback(\n        e => {\n            e.preventDefault();\n            dispatch(resetPassword(form));\n        },\n        [dispatch, form]\n    );\n\n    if (resetPasswordSuccess) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/login'\n                }}\n            />\n        );\n    }\n\n    if (!history.location.state) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/forgot-password'\n                }}\n            />\n        );\n    }\n\n    if (history.location.state.from === \"/forgot-password\") {\n\n        return (\n            <section className={styles.container}>\n\n                <form className={styles.form} onSubmit={handleResetPassword}>\n                    <h1 className={`text text_type_main-medium ${styles.h1}`}>\n                        Восстановление пароля\n                    </h1>\n                    <div className={styles.input} >\n                        <PasswordInput name=\"password\" onChange={onChange} value={form.password} />\n                    </div>\n                    <div className={styles.input} >\n                        <Input placeholder=\"Введите код из письма\" size={'default'} name=\"token\" onChange={onChange} value={form.token} />\n                    </div>\n                    <div className={styles.button}>\n                        <Button type=\"primary\" size=\"medium\">\n                            Сохранить\n                        </Button>\n                    </div>\n                    <p className=\"text text_type_main-default\">Вспомнили пароль? <Link to={'/login'} className={styles.textButton}>Войти</Link></p>\n\n                </form>\n\n            </section>\n        );\n    }\n    else { return (<></>) }\n}","import React, { FC } from 'react';\nimport styles from './feed-status.module.css';\nimport { useSelector } from '../../utils/hooks';\nimport { IOrderFromServer } from '../../utils/types';\n\nexport const FeedStatus: FC = () => {\n\n  const {\n    ordersFeed\n  } = useSelector(store => store.ws)\n\n  const ordersReady: IOrderFromServer[] | null = ordersFeed && ordersFeed.orders.filter((order: IOrderFromServer) => order.status === 'done')\n  const ordersReadyNumbers = ordersReady && ordersReady.map((order: IOrderFromServer) => order.number)\n  const ordersCreated = ordersFeed && ordersFeed.orders.filter((order: IOrderFromServer) => order.status === 'pending')\n  const ordersCreatedNumbers = ordersCreated && ordersCreated.map((order: IOrderFromServer) => order.number)\n  const ordersPending = ordersFeed && ordersFeed.orders.filter((order: IOrderFromServer) => order.status === 'pending')\n  const ordersPendingNumbers = ordersPending && ordersPending.map((order: IOrderFromServer) => order.number)\n  const ordersInProgress = ordersCreatedNumbers && ordersPendingNumbers && ordersCreatedNumbers.concat(ordersPendingNumbers)\n  const uniqueOrdersInProgress = ordersInProgress && ordersInProgress.filter((element: string, index: number) => {\n    return ordersInProgress.indexOf(element) === index;\n  });\n  \n  return (\n    ordersFeed &&\n    <section className={styles.feedStatusConteiner}>\n      <div className={styles.feedReadyAndInProgress}>\n        <div className={styles.feedStatus}>\n          <p className=\"text text_type_main-medium\">Готовы:</p>\n          <ul className={styles.feedList}>\n            {ordersReadyNumbers && ordersReadyNumbers.slice(0, 5).map((number: string, index: number) => {\n              return <li className={`text text_type_digits-default ${styles.feedListItemReady}`} key={index}>{number}</li>\n            })}\n          </ul>\n        </div>\n        <div className={styles.feedStatus}>\n          <p className=\"text text_type_main-medium\">В работе:</p>\n          <ul className={styles.feedList}>\n            {uniqueOrdersInProgress && uniqueOrdersInProgress.slice(0, 5).map((number: string, index: number) => {\n              return <li className={`text text_type_digits-default ${styles.feedListItemInProgress}`} key={index}>{number}</li>\n            })}\n          </ul>\n        </div>\n      </div>\n\n      <div className={styles.feedTotal}>\n        <p className=\"text text_type_main-medium\">Выполнено за все время:</p>\n        <p className='text text_type_digits-large'>{ordersFeed.total}</p>\n      </div>\n\n      <div className={styles.feedToday}>\n        <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\n        <p className='text text_type_digits-large'>{ordersFeed.totalToday}</p>\n      </div>\n    </section>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, useHistory, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Modals } from '../../components/modals/modals'\nimport styles from './feed.module.css';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { wsConnectionStartFeed, wsDisconnect } from '../../services/actions/ws';\nimport { FeedOrders } from '../../components/feed-orders/feed-orders';\nimport { FeedStatus } from '../../components/feed-status/feed-status';\nimport { SelectedOrder } from '../../components/selected-order/selected-order';\nimport { getOrder } from '../../services/actions/feed';\nimport { IOrdersFeed } from '../../utils/types';\n\nexport const Feed = () => {\n\n    const match = useRouteMatch();\n    const history = useHistory();\n    const location: { state: { background: string }, pathname: string } = useLocation();\n    const findIdInUrl = history.location.pathname.slice(history.location.pathname.lastIndexOf('/') + 1);\n    const orderNumber = match.path !== history.location.pathname && findIdInUrl\n    const background = location.state && location.state.background;\n    const {\n        ordersFeed,\n    } = useSelector(store => store.ws)\n    const {\n        selectedOrder,\n    } = useSelector(store => store.feed)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(wsConnectionStartFeed());\n        orderNumber && dispatch(getOrder(orderNumber))\n\n        return () => {\n            dispatch(wsDisconnect())\n        }\n\n    }, [dispatch, orderNumber])\n\n    const [orders, setOrders] = useState<IOrdersFeed | null>(null)\n    useEffect(() => {\n        setOrders(ordersFeed)\n    }, [ordersFeed])\n\n\n    if (selectedOrder && !background && location.pathname !== ('/feed' || '/feed/')) {\n        return (\n            <Switch>\n                <Route\n                    path={`${match.path}/:number`}\n                    children={() => {\n                        return (\n                            <SelectedOrder selectedOrder={selectedOrder[0]} isModal={false}\n                            />\n                        );\n                    }}\n                />\n            </Switch>\n        )\n    }\n\n    if (orders !== null) {\n        return (\n            <>\n                <h1 className={`text text_type_main-large ${styles.h1}`}>\n                    Лента заказов\n                </h1>\n\n                <section className={styles.feed}>\n                    <FeedOrders ordersFeed={ordersFeed} />\n                    <FeedStatus />\n\n                </section>\n\n\n                {background\n                    && selectedOrder\n                    &&\n                    <Switch>\n                        <Modals >\n                            <Route\n                                path={`${match.path}/:number`}\n                                children={() => {\n                                    return (\n                                        <SelectedOrder selectedOrder={selectedOrder[0]} isModal={true}\n                                        />\n                                    );\n                                }}\n                            />\n                        </Modals>\n                    </Switch>}\n            </>\n        )\n    }\n    else return <></>\n}\n","import { useEffect, FC } from 'react';\nimport { Route, Redirect, useLocation, RouteProps } from 'react-router-dom';\nimport { getUser } from '../../services/actions/auth';\nimport { useSelector, useDispatch } from '../../utils/hooks';\n\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n    const location = useLocation();\n    const {\n        user\n    } = useSelector(store => store.auth)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getUser())\n    }, [dispatch])\n\n    return (\n        <Route\n            {...rest}\n            render={() =>\n                user?.name ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location.pathname }\n                        }} />\n                )\n            }\n        />\n    );\n}\n\n\n","import React, { useEffect } from 'react';\nimport AppStyles from './app.module.css';\nimport { AppHeader } from '../app-header/app-header';\nimport { HomePage, Feed, Login, Register, ForgotPassword, Profile, ResetPassword } from '../../pages';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ProtectedRoute } from '../protected-route/protected-route';\nimport { useDispatch } from '../../utils/hooks';\nimport {\n  getIngredients\n} from '../../services/actions/ingredients';\nimport { getUser } from '../../services/actions/auth';\n\n\nexport const App = () => {\n  const dispatch = useDispatch();  \n\n  useEffect(() => {\n    dispatch(getIngredients());\n    dispatch(getUser());\n  }, [dispatch])\n\n\n  return (\n    <Router>\n      <div className={AppStyles.app}>\n\n        <AppHeader />\n\n        <main className={AppStyles.main}>\n\n          <Switch>\n\n            <Route path=\"/feed\" children={<Feed />} />\n            <Route path=\"/login\" exact={true} children={<Login />} />\n            <Route path=\"/register\" exact={true} children={<Register />} />\n            <Route path=\"/forgot-password\" exact={true} children={<ForgotPassword />} />\n            <Route path=\"/reset-password\" exact={true} children={<ResetPassword />} />\n            <ProtectedRoute path=\"/profile\" children={<Profile />} />\n            <Route path={\"/\"} children={<HomePage />} />\n\n          </Switch>\n\n        </main>\n      </div>\n    </Router >\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './services/store';\nimport { App } from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__20EW8\",\"container\":\"ingredient-details_container__1-8YX\",\"image\":\"ingredient-details_image__H2-xP\",\"title\":\"ingredient-details_title__2_5MB\",\"name\":\"ingredient-details_name__3OKTo\",\"nutritionList\":\"ingredient-details_nutritionList__DAsCb\",\"nutrition\":\"ingredient-details_nutrition__2ax8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedStatusConteiner\":\"feed-status_feedStatusConteiner__efZ-H\",\"feedReadyAndInProgress\":\"feed-status_feedReadyAndInProgress__2PoCF\",\"feedStatus\":\"feed-status_feedStatus__2LDfP\",\"feedList\":\"feed-status_feedList__EVnAh\",\"feedListItemReady\":\"feed-status_feedListItemReady__1Il07\",\"feedListItemInProgress\":\"feed-status_feedListItemInProgress__2i-Tn\",\"feedH2\":\"feed-status_feedH2__vnUyI\",\"feedTotal\":\"feed-status_feedTotal__3oadH\",\"feedToday\":\"feed-status_feedToday__1ZI_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"burger-ingredients_ingredients__2TY9H\",\"tabs\":\"burger-ingredients_tabs__1yNyE\",\"ingredientsContainer\":\"burger-ingredients_ingredientsContainer__2Y7_F\",\"ingredientList\":\"burger-ingredients_ingredientList__oflb7\",\"h2\":\"burger-ingredients_h2__2lV3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constr\":\"burger-constructor_constr__3kpHY\",\"constrContainer\":\"burger-constructor_constrContainer__1d1IC\",\"toppingsWindow\":\"burger-constructor_toppingsWindow__31t-c\",\"insideIngrediend\":\"burger-constructor_insideIngrediend__687bh\",\"inside\":\"burger-constructor_inside__2nB1i\",\"outside\":\"burger-constructor_outside__1_UFj\",\"icon\":\"burger-constructor_icon__2zlHT\",\"total\":\"burger-constructor_total__2z4fk\",\"totalPrice\":\"burger-constructor_totalPrice__3GzOq\",\"isHover\":\"burger-constructor_isHover__3JjW2\",\"chooseIngredient\":\"burger-constructor_chooseIngredient__ZCNVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__fTHXE\",\"container\":\"order-details_container__1PXDt\",\"image\":\"order-details_image__lnOoe\",\"orderNumber\":\"order-details_orderNumber__7RKjN\",\"orderId\":\"order-details_orderId__vw7fX\",\"checkMarkIcon\":\"order-details_checkMarkIcon__cUdK7\",\"startCooking\":\"order-details_startCooking__48O41\",\"wait\":\"order-details_wait__NfI4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButton\":\"profile-form_navButton__1bsFA\",\"navButtonIsActive\":\"profile-form_navButtonIsActive__1rP3H\",\"form\":\"profile-form_form__21cMe\",\"input\":\"profile-form_input__uvlmG\",\"button\":\"profile-form_button__CTSZ8\",\"textButton\":\"profile-form_textButton__1biO4\",\"actions\":\"profile-form_actions__WRvVS\",\"navButtonDisabled\":\"profile-form_navButtonDisabled__n2-ul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__2wfWp\",\"image\":\"ingredient_image__3WGGy\",\"price\":\"ingredient_price__2xF1Q\",\"name\":\"ingredient_name__HmI8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"modalHidden\":\"modal_modalHidden__3BtsI\",\"modalContent\":\"modal_modalContent__10T8x\",\"closeIcon\":\"modal_closeIcon__1s4Qd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"authorization_container__2nRQZ\",\"form\":\"authorization_form__1-Nf_\",\"h1\":\"authorization_h1__1qBX8\",\"input\":\"authorization_input__1Fdqa\",\"button\":\"authorization_button__NXolV\",\"textButton\":\"authorization_textButton__3EXlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constr\":\"draggable-card_constr__25uqc\",\"constrContainer\":\"draggable-card_constrContainer__3sSk9\",\"toppingsWindow\":\"draggable-card_toppingsWindow__2iKgD\",\"insideIngrediend\":\"draggable-card_insideIngrediend__hea_u\",\"inside\":\"draggable-card_inside__3rn_i\",\"outside\":\"draggable-card_outside__28Ki9\",\"icon\":\"draggable-card_icon__1s0d7\",\"total\":\"draggable-card_total__2Pt4M\",\"totalPrice\":\"draggable-card_totalPrice__yktj2\",\"isHover\":\"draggable-card_isHover__2t0hP\",\"chooseIngredient\":\"draggable-card_chooseIngredient__1Jf36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\",\"main\":\"app_main__3yfFw\",\"constr\":\"app_constr__GuC-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"home_h1__2XPfY\",\"burgers\":\"home_burgers__14xK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__tfXD-\",\"modalOverlayHidden\":\"modal-overlay_modalOverlayHidden__1cMP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedOrdersContainer\":\"feed-orders_feedOrdersContainer__3aBR4\",\"h2\":\"feed-orders_h2__sKO6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"feed_h1__1Hj3A\",\"feed\":\"feed_feed__1Jw3v\",\"feedOrder\":\"feed_feedOrder__2DAGV\"};"],"sourceRoot":""}